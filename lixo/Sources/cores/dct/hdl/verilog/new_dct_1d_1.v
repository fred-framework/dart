// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module new_dct_1d_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_src_AWVALID,
        m_axi_src_AWREADY,
        m_axi_src_AWADDR,
        m_axi_src_AWID,
        m_axi_src_AWLEN,
        m_axi_src_AWSIZE,
        m_axi_src_AWBURST,
        m_axi_src_AWLOCK,
        m_axi_src_AWCACHE,
        m_axi_src_AWPROT,
        m_axi_src_AWQOS,
        m_axi_src_AWREGION,
        m_axi_src_AWUSER,
        m_axi_src_WVALID,
        m_axi_src_WREADY,
        m_axi_src_WDATA,
        m_axi_src_WSTRB,
        m_axi_src_WLAST,
        m_axi_src_WID,
        m_axi_src_WUSER,
        m_axi_src_ARVALID,
        m_axi_src_ARREADY,
        m_axi_src_ARADDR,
        m_axi_src_ARID,
        m_axi_src_ARLEN,
        m_axi_src_ARSIZE,
        m_axi_src_ARBURST,
        m_axi_src_ARLOCK,
        m_axi_src_ARCACHE,
        m_axi_src_ARPROT,
        m_axi_src_ARQOS,
        m_axi_src_ARREGION,
        m_axi_src_ARUSER,
        m_axi_src_RVALID,
        m_axi_src_RREADY,
        m_axi_src_RDATA,
        m_axi_src_RLAST,
        m_axi_src_RID,
        m_axi_src_RUSER,
        m_axi_src_RRESP,
        m_axi_src_BVALID,
        m_axi_src_BREADY,
        m_axi_src_BRESP,
        m_axi_src_BID,
        m_axi_src_BUSER,
        ap_ce,
        src_offset,
        src_offset1,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        dst_address1,
        dst_ce1,
        dst_we1,
        dst_d1,
        off,
        src_blk_n_AR,
        src_blk_n_R
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_src_AWVALID;
input   m_axi_src_AWREADY;
output  [31:0] m_axi_src_AWADDR;
output  [0:0] m_axi_src_AWID;
output  [31:0] m_axi_src_AWLEN;
output  [2:0] m_axi_src_AWSIZE;
output  [1:0] m_axi_src_AWBURST;
output  [1:0] m_axi_src_AWLOCK;
output  [3:0] m_axi_src_AWCACHE;
output  [2:0] m_axi_src_AWPROT;
output  [3:0] m_axi_src_AWQOS;
output  [3:0] m_axi_src_AWREGION;
output  [0:0] m_axi_src_AWUSER;
output   m_axi_src_WVALID;
input   m_axi_src_WREADY;
output  [15:0] m_axi_src_WDATA;
output  [1:0] m_axi_src_WSTRB;
output   m_axi_src_WLAST;
output  [0:0] m_axi_src_WID;
output  [0:0] m_axi_src_WUSER;
output   m_axi_src_ARVALID;
input   m_axi_src_ARREADY;
output  [31:0] m_axi_src_ARADDR;
output  [0:0] m_axi_src_ARID;
output  [31:0] m_axi_src_ARLEN;
output  [2:0] m_axi_src_ARSIZE;
output  [1:0] m_axi_src_ARBURST;
output  [1:0] m_axi_src_ARLOCK;
output  [3:0] m_axi_src_ARCACHE;
output  [2:0] m_axi_src_ARPROT;
output  [3:0] m_axi_src_ARQOS;
output  [3:0] m_axi_src_ARREGION;
output  [0:0] m_axi_src_ARUSER;
input   m_axi_src_RVALID;
output   m_axi_src_RREADY;
input  [15:0] m_axi_src_RDATA;
input   m_axi_src_RLAST;
input  [0:0] m_axi_src_RID;
input  [0:0] m_axi_src_RUSER;
input  [1:0] m_axi_src_RRESP;
input   m_axi_src_BVALID;
output   m_axi_src_BREADY;
input  [1:0] m_axi_src_BRESP;
input  [0:0] m_axi_src_BID;
input  [0:0] m_axi_src_BUSER;
input   ap_ce;
input  [30:0] src_offset;
input  [5:0] src_offset1;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
output  [5:0] dst_address1;
output   dst_ce1;
output   dst_we1;
output  [15:0] dst_d1;
input  [3:0] off;
output   src_blk_n_AR;
output   src_blk_n_R;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_src_ARVALID;
reg[31:0] m_axi_src_ARADDR;
reg m_axi_src_RREADY;
reg[5:0] dst_address0;
reg dst_ce0;
reg dst_we0;
reg[15:0] dst_d0;
reg[5:0] dst_address1;
reg dst_ce1;
reg dst_we1;
reg[15:0] dst_d1;
reg src_blk_n_AR;
reg src_blk_n_R;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_sig_ioackin_m_axi_src_ARREADY;
reg    ap_block_state16_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
reg   [5:0] src_offset1_read_reg_1258;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] src_offset_cast_fu_295_p1;
reg   [31:0] src_offset_cast_reg_1269;
reg   [31:0] src_addr_reg_1280;
reg   [31:0] src_addr_8_reg_1286;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] src_addr_9_reg_1292;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] src_addr_10_reg_1298;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] src_addr_11_reg_1304;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] src_addr_12_reg_1310;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
reg    ap_block_pp0_stage5_11001;
reg   [31:0] src_addr_13_reg_1316;
reg   [31:0] src_addr_14_reg_1322;
reg   [3:0] off_read_reg_1328;
reg   [3:0] off_read_reg_1328_pp0_iter1_reg;
reg  signed [15:0] src_addr_read_reg_1337;
reg  signed [15:0] src_addr_8_read_reg_1343;
wire  signed [28:0] tmp_22_1_fu_931_p2;
reg  signed [28:0] tmp_22_1_reg_1349;
wire  signed [28:0] tmp_22_2_fu_937_p2;
reg  signed [28:0] tmp_22_2_reg_1354;
wire  signed [28:0] tmp_22_3_fu_943_p2;
reg  signed [28:0] tmp_22_3_reg_1359;
wire  signed [28:0] tmp_22_5_fu_949_p2;
reg  signed [28:0] tmp_22_5_reg_1364;
wire  signed [28:0] tmp_22_6_fu_955_p2;
reg  signed [28:0] tmp_22_6_reg_1369;
wire  signed [28:0] tmp_22_7_fu_961_p2;
reg  signed [28:0] tmp_22_7_reg_1374;
reg  signed [15:0] src_addr_9_read_reg_1379;
wire  signed [28:0] grp_fu_967_p3;
reg  signed [28:0] tmp11_reg_1385;
wire  signed [28:0] grp_fu_974_p3;
reg  signed [28:0] tmp18_reg_1390;
wire  signed [28:0] grp_fu_981_p3;
reg  signed [28:0] tmp25_reg_1395;
wire  signed [28:0] grp_fu_988_p3;
reg  signed [28:0] tmp37_reg_1400;
reg  signed [28:0] tmp37_reg_1400_pp0_iter2_reg;
wire  signed [28:0] grp_fu_995_p3;
reg  signed [28:0] tmp44_reg_1405;
reg  signed [28:0] tmp44_reg_1405_pp0_iter2_reg;
wire  signed [28:0] grp_fu_1002_p3;
reg  signed [28:0] tmp51_reg_1410;
reg  signed [28:0] tmp51_reg_1410_pp0_iter2_reg;
reg  signed [15:0] src_addr_10_read_reg_1415;
wire  signed [28:0] tmp_22_1_2_fu_1009_p2;
reg  signed [28:0] tmp_22_1_2_reg_1421;
wire  signed [28:0] tmp_22_2_2_fu_1015_p2;
reg  signed [28:0] tmp_22_2_2_reg_1426;
wire  signed [28:0] tmp_22_3_2_fu_1021_p2;
reg  signed [28:0] tmp_22_3_2_reg_1431;
wire  signed [28:0] tmp_22_5_2_fu_1027_p2;
reg  signed [28:0] tmp_22_5_2_reg_1436;
wire  signed [28:0] tmp_22_6_2_fu_1033_p2;
reg  signed [28:0] tmp_22_6_2_reg_1441;
wire  signed [28:0] tmp_22_7_2_fu_1039_p2;
reg  signed [28:0] tmp_22_7_2_reg_1446;
reg  signed [15:0] src_addr_11_read_reg_1451;
wire  signed [28:0] grp_fu_1045_p3;
reg  signed [28:0] tmp12_reg_1457;
wire  signed [28:0] grp_fu_1052_p3;
reg  signed [28:0] tmp19_reg_1462;
wire  signed [28:0] grp_fu_1059_p3;
reg  signed [28:0] tmp26_reg_1467;
wire  signed [28:0] grp_fu_1066_p3;
reg  signed [28:0] tmp38_reg_1472;
wire  signed [28:0] grp_fu_1073_p3;
reg  signed [28:0] tmp45_reg_1477;
reg  signed [28:0] tmp45_reg_1477_pp0_iter2_reg;
wire  signed [28:0] grp_fu_1080_p3;
reg  signed [28:0] tmp52_reg_1482;
reg  signed [28:0] tmp52_reg_1482_pp0_iter2_reg;
reg  signed [15:0] src_addr_12_read_reg_1487;
wire  signed [28:0] tmp_22_1_4_fu_1087_p2;
reg  signed [28:0] tmp_22_1_4_reg_1495;
wire  signed [28:0] tmp_22_2_4_fu_1093_p2;
reg  signed [28:0] tmp_22_2_4_reg_1500;
wire  signed [28:0] tmp_22_3_4_fu_1099_p2;
reg  signed [28:0] tmp_22_3_4_reg_1505;
wire  signed [28:0] tmp_22_5_4_fu_1105_p2;
reg  signed [28:0] tmp_22_5_4_reg_1510;
wire  signed [28:0] tmp_22_6_4_fu_1111_p2;
reg  signed [28:0] tmp_22_6_4_reg_1515;
wire  signed [28:0] tmp_22_7_4_fu_1117_p2;
reg  signed [28:0] tmp_22_7_4_reg_1520;
reg  signed [15:0] src_addr_13_read_reg_1525;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
wire  signed [28:0] grp_fu_1123_p3;
reg  signed [28:0] tmp14_reg_1533;
wire  signed [28:0] grp_fu_1130_p3;
reg  signed [28:0] tmp21_reg_1538;
wire  signed [28:0] grp_fu_1137_p3;
reg  signed [28:0] tmp28_reg_1543;
wire  signed [28:0] grp_fu_1144_p3;
reg  signed [28:0] tmp40_reg_1548;
wire  signed [28:0] grp_fu_1151_p3;
reg  signed [28:0] tmp47_reg_1553;
wire  signed [28:0] grp_fu_1158_p3;
reg  signed [28:0] tmp54_reg_1558;
reg  signed [15:0] src_addr_14_read_reg_1563;
wire   [15:0] tmp_6_fu_511_p2;
reg   [15:0] tmp_6_reg_1570;
wire   [16:0] tmp_22_4_s_fu_515_p2;
reg   [16:0] tmp_22_4_s_reg_1575;
wire  signed [28:0] tmp_21_0_6_cast_fu_563_p1;
reg  signed [28:0] tmp_21_0_6_cast_reg_1580;
wire  signed [28:0] tmp_21_0_7_cast_fu_573_p1;
reg  signed [28:0] tmp_21_0_7_cast_reg_1587;
wire   [28:0] tmp4_fu_583_p2;
reg   [28:0] tmp4_reg_1592;
wire   [28:0] tmp5_fu_589_p2;
reg   [28:0] tmp5_reg_1597;
wire   [28:0] tmp6_fu_613_p2;
reg   [28:0] tmp6_reg_1602;
wire  signed [28:0] grp_fu_1165_p3;
reg  signed [28:0] tmp15_reg_1607;
wire  signed [28:0] grp_fu_1181_p3;
reg  signed [28:0] tmp22_reg_1612;
wire  signed [28:0] grp_fu_1197_p3;
reg  signed [28:0] tmp29_reg_1617;
reg   [15:0] tmp_15_4_reg_1622;
wire  signed [28:0] grp_fu_1213_p3;
reg  signed [28:0] tmp42_reg_1627;
reg   [15:0] tmp_15_1_reg_1632;
reg   [15:0] tmp_15_2_reg_1637;
reg   [15:0] tmp_15_3_reg_1642;
wire  signed [28:0] grp_fu_1221_p3;
reg  signed [28:0] tmp49_reg_1647;
wire  signed [3:0] tmp_18_1_fu_793_p2;
reg  signed [3:0] tmp_18_1_reg_1652;
wire  signed [4:0] tmp_18_2_fu_803_p3;
reg  signed [4:0] tmp_18_2_reg_1658;
wire  signed [27:0] grp_fu_1228_p3;
reg  signed [27:0] tmp56_reg_1663;
(* use_dsp48 = "no" *) wire   [28:0] tmp39_fu_826_p2;
reg   [28:0] tmp39_reg_1668;
(* use_dsp48 = "no" *) wire   [28:0] tmp46_fu_864_p2;
reg   [28:0] tmp46_reg_1673;
(* use_dsp48 = "no" *) wire   [28:0] tmp53_fu_899_p2;
reg   [28:0] tmp53_reg_1678;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage6_subdone;
reg   [3:0] ap_port_reg_off;
wire   [63:0] tmp_3_fu_704_p1;
wire   [63:0] tmp_19_4_fu_788_p1;
wire   [63:0] tmp_19_1_fu_798_p1;
wire   [63:0] tmp_19_2_fu_810_p1;
wire   [63:0] tmp_19_3_fu_821_p1;
wire   [63:0] tmp_19_5_fu_859_p1;
wire   [63:0] tmp_19_6_fu_891_p1;
wire   [63:0] tmp_19_7_fu_926_p1;
wire   [63:0] sum_cast_fu_309_p1;
wire   [63:0] sum3_cast_fu_333_p1;
wire   [63:0] sum5_cast_fu_357_p1;
wire   [63:0] sum7_cast_fu_381_p1;
wire   [63:0] sum9_cast_fu_405_p1;
wire   [63:0] sum6_cast_fu_429_p1;
wire   [63:0] sum8_cast_fu_453_p1;
wire   [63:0] sum10_cast_fu_477_p1;
reg    ap_reg_ioackin_m_axi_src_ARREADY;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] src_offset_cast1_cas_fu_299_p1;
wire   [31:0] sum_fu_303_p2;
wire   [5:0] sum_0_1_fu_319_p2;
wire   [31:0] sum_0_1_cast_cast_fu_324_p1;
wire   [31:0] sum3_fu_328_p2;
wire   [5:0] sum_0_2_fu_343_p2;
wire   [31:0] sum_0_2_cast_cast_fu_348_p1;
wire   [31:0] sum5_fu_352_p2;
wire   [5:0] sum_0_3_fu_367_p2;
wire   [31:0] sum_0_3_cast_cast_fu_372_p1;
wire   [31:0] sum7_fu_376_p2;
wire   [5:0] sum_0_4_fu_391_p2;
wire   [31:0] sum_0_4_cast_cast_fu_396_p1;
wire   [31:0] sum9_fu_400_p2;
wire   [5:0] sum_0_5_fu_415_p2;
wire   [31:0] sum_0_5_cast_cast_fu_420_p1;
wire   [31:0] sum6_fu_424_p2;
wire   [5:0] sum_0_6_fu_439_p2;
wire   [31:0] sum_0_6_cast_cast_fu_444_p1;
wire   [31:0] sum8_fu_448_p2;
wire   [5:0] sum_0_7_fu_463_p2;
wire   [31:0] sum_0_7_cast_cast_fu_468_p1;
wire   [31:0] sum1_fu_472_p2;
wire  signed [16:0] tmp_21_0_5_cast1_fu_505_p1;
wire  signed [16:0] tmp_21_0_6_cast1_fu_508_p1;
wire   [28:0] tmp_4_fu_521_p3;
wire   [28:0] tmp_22_0_1_fu_528_p3;
wire   [28:0] tmp_22_0_2_fu_535_p3;
wire   [28:0] tmp_22_0_3_fu_542_p3;
wire   [28:0] tmp_22_0_4_fu_549_p3;
wire   [28:0] tmp_22_0_5_fu_556_p3;
wire   [28:0] tmp_22_0_7_fu_576_p3;
wire   [28:0] tmp_fu_601_p2;
wire   [28:0] tmp_22_0_6_fu_566_p3;
wire   [28:0] tmp8_fu_607_p2;
wire   [28:0] tmp7_fu_595_p2;
wire   [28:0] tmp_23_4_1_fu_619_p2;
wire   [28:0] tmp32_fu_631_p2;
wire   [28:0] tmp_23_4_2_fu_625_p2;
wire  signed [28:0] tmp_22_4_558_cast_fu_643_p1;
wire   [28:0] p_shl_fu_646_p3;
wire   [28:0] tmp34_fu_653_p2;
wire   [28:0] tmp33_fu_659_p2;
wire   [28:0] tmp31_fu_637_p2;
wire   [28:0] tmp_4_12_fu_665_p2;
wire   [28:0] tmp3_fu_684_p2;
wire   [28:0] tmp_s_fu_688_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp13_fu_712_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp10_fu_708_p2;
wire   [28:0] tmp_1_fu_716_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp20_fu_736_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp17_fu_732_p2;
wire   [28:0] tmp_2_10_fu_740_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp27_fu_760_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp24_fu_756_p2;
wire   [28:0] tmp_3_11_fu_764_p2;
wire   [4:0] off_cast_fu_681_p1;
wire   [5:0] tmp_18_s_fu_780_p3;
wire  signed [4:0] tmp_18_3_cast_fu_818_p1;
wire  signed [28:0] grp_fu_1236_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp36_fu_833_p2;
wire   [28:0] tmp_5_fu_837_p2;
wire   [5:0] tmp_cast2_fu_830_p1;
wire   [5:0] tmp_18_5_fu_853_p2;
wire  signed [28:0] grp_fu_1243_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp43_fu_868_p2;
wire   [28:0] tmp_6_13_fu_872_p2;
wire  signed [5:0] tmp_18_6_cast_fu_888_p1;
wire  signed [28:0] grp_fu_1250_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp50_fu_903_p2;
wire   [28:0] tmp_7_fu_907_p2;
wire  signed [5:0] tmp_18_7_cast_fu_923_p1;
wire  signed [15:0] tmp_22_1_fu_931_p0;
wire  signed [28:0] tmp_21_cast_fu_487_p1;
wire   [14:0] tmp_22_1_fu_931_p1;
wire  signed [15:0] tmp_22_2_fu_937_p0;
wire   [14:0] tmp_22_2_fu_937_p1;
wire  signed [15:0] tmp_22_3_fu_943_p0;
wire   [14:0] tmp_22_3_fu_943_p1;
wire  signed [15:0] tmp_22_5_fu_949_p0;
wire   [13:0] tmp_22_5_fu_949_p1;
wire  signed [15:0] tmp_22_6_fu_955_p0;
wire   [13:0] tmp_22_6_fu_955_p1;
wire  signed [15:0] tmp_22_7_fu_961_p0;
wire   [12:0] tmp_22_7_fu_961_p1;
wire  signed [15:0] grp_fu_967_p0;
wire  signed [28:0] tmp_21_0_1_cast_fu_490_p1;
wire   [14:0] grp_fu_967_p1;
wire  signed [15:0] grp_fu_974_p0;
wire   [13:0] grp_fu_974_p1;
wire  signed [15:0] grp_fu_981_p0;
wire  signed [12:0] grp_fu_981_p1;
wire  signed [15:0] grp_fu_988_p0;
wire  signed [14:0] grp_fu_988_p1;
wire  signed [15:0] grp_fu_995_p0;
wire  signed [14:0] grp_fu_995_p1;
wire  signed [15:0] grp_fu_1002_p0;
wire  signed [13:0] grp_fu_1002_p1;
wire  signed [15:0] tmp_22_1_2_fu_1009_p0;
wire  signed [28:0] tmp_21_0_2_cast_fu_493_p1;
wire   [13:0] tmp_22_1_2_fu_1009_p1;
wire  signed [15:0] tmp_22_2_2_fu_1015_p0;
wire  signed [13:0] tmp_22_2_2_fu_1015_p1;
wire  signed [15:0] tmp_22_3_2_fu_1021_p0;
wire  signed [14:0] tmp_22_3_2_fu_1021_p1;
wire  signed [15:0] tmp_22_5_2_fu_1027_p0;
wire   [12:0] tmp_22_5_2_fu_1027_p1;
wire  signed [15:0] tmp_22_6_2_fu_1033_p0;
wire   [14:0] tmp_22_6_2_fu_1033_p1;
wire  signed [15:0] tmp_22_7_2_fu_1039_p0;
wire   [14:0] tmp_22_7_2_fu_1039_p1;
wire  signed [15:0] grp_fu_1045_p0;
wire  signed [28:0] tmp_21_0_3_cast_fu_496_p1;
wire   [12:0] grp_fu_1045_p1;
wire  signed [15:0] grp_fu_1052_p0;
wire  signed [14:0] grp_fu_1052_p1;
wire  signed [15:0] grp_fu_1059_p0;
wire  signed [13:0] grp_fu_1059_p1;
wire  signed [15:0] grp_fu_1066_p0;
wire   [14:0] grp_fu_1066_p1;
wire  signed [15:0] grp_fu_1073_p0;
wire  signed [13:0] grp_fu_1073_p1;
wire  signed [15:0] grp_fu_1080_p0;
wire  signed [14:0] grp_fu_1080_p1;
wire  signed [15:0] tmp_22_1_4_fu_1087_p0;
wire  signed [28:0] tmp_21_0_4_cast_fu_499_p1;
wire  signed [12:0] tmp_22_1_4_fu_1087_p1;
wire  signed [15:0] tmp_22_2_4_fu_1093_p0;
wire  signed [14:0] tmp_22_2_4_fu_1093_p1;
wire  signed [15:0] tmp_22_3_4_fu_1099_p0;
wire   [13:0] tmp_22_3_4_fu_1099_p1;
wire  signed [15:0] tmp_22_5_4_fu_1105_p0;
wire  signed [14:0] tmp_22_5_4_fu_1105_p1;
wire  signed [15:0] tmp_22_6_4_fu_1111_p0;
wire  signed [13:0] tmp_22_6_4_fu_1111_p1;
wire  signed [15:0] tmp_22_7_4_fu_1117_p0;
wire   [14:0] tmp_22_7_4_fu_1117_p1;
wire  signed [15:0] grp_fu_1123_p0;
wire  signed [28:0] tmp_21_0_5_cast_fu_502_p1;
wire  signed [13:0] grp_fu_1123_p1;
wire  signed [15:0] grp_fu_1130_p0;
wire  signed [13:0] grp_fu_1130_p1;
wire  signed [15:0] grp_fu_1137_p0;
wire   [14:0] grp_fu_1137_p1;
wire  signed [15:0] grp_fu_1144_p0;
wire  signed [12:0] grp_fu_1144_p1;
wire  signed [15:0] grp_fu_1151_p0;
wire   [14:0] grp_fu_1151_p1;
wire  signed [15:0] grp_fu_1158_p0;
wire  signed [14:0] grp_fu_1158_p1;
wire  signed [15:0] grp_fu_1165_p0;
wire  signed [14:0] grp_fu_1165_p1;
wire  signed [28:0] grp_fu_1172_p3;
wire  signed [15:0] grp_fu_1172_p0;
wire  signed [14:0] grp_fu_1172_p1;
wire   [13:0] grp_fu_1172_p2;
wire  signed [15:0] grp_fu_1181_p0;
wire   [13:0] grp_fu_1181_p1;
wire  signed [28:0] grp_fu_1188_p3;
wire  signed [15:0] grp_fu_1188_p0;
wire   [14:0] grp_fu_1188_p1;
wire   [13:0] grp_fu_1188_p2;
wire  signed [15:0] grp_fu_1197_p0;
wire   [12:0] grp_fu_1197_p1;
wire  signed [28:0] grp_fu_1204_p3;
wire  signed [15:0] grp_fu_1204_p0;
wire  signed [14:0] grp_fu_1204_p1;
wire   [13:0] grp_fu_1204_p2;
wire  signed [15:0] grp_fu_1213_p0;
wire  signed [13:0] grp_fu_1213_p1;
wire   [13:0] grp_fu_1213_p2;
wire  signed [15:0] grp_fu_1221_p0;
wire   [13:0] grp_fu_1221_p1;
wire   [13:0] grp_fu_1221_p2;
wire  signed [12:0] grp_fu_1228_p1;
wire   [13:0] grp_fu_1228_p2;
wire  signed [15:0] grp_fu_1236_p0;
wire   [14:0] grp_fu_1236_p1;
wire  signed [15:0] grp_fu_1243_p0;
wire  signed [14:0] grp_fu_1243_p1;
wire  signed [15:0] grp_fu_1250_p0;
wire   [13:0] grp_fu_1250_p1;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_539;
reg    ap_condition_550;
reg    ap_condition_562;
reg    ap_condition_574;
reg    ap_condition_586;
reg    ap_condition_598;
reg    ap_condition_610;
reg    ap_condition_623;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_reg_ioackin_m_axi_src_ARREADY = 1'b0;
end

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U1(
    .din0(tmp_22_1_fu_931_p0),
    .din1(tmp_22_1_fu_931_p1),
    .dout(tmp_22_1_fu_931_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U2(
    .din0(tmp_22_2_fu_937_p0),
    .din1(tmp_22_2_fu_937_p1),
    .dout(tmp_22_2_fu_937_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U3(
    .din0(tmp_22_3_fu_943_p0),
    .din1(tmp_22_3_fu_943_p1),
    .dout(tmp_22_3_fu_943_p2)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U4(
    .din0(tmp_22_5_fu_949_p0),
    .din1(tmp_22_5_fu_949_p1),
    .dout(tmp_22_5_fu_949_p2)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U5(
    .din0(tmp_22_6_fu_955_p0),
    .din1(tmp_22_6_fu_955_p1),
    .dout(tmp_22_6_fu_955_p2)
);

top_fdct_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13ns_29_1_1_U6(
    .din0(tmp_22_7_fu_961_p0),
    .din1(tmp_22_7_fu_961_p1),
    .dout(tmp_22_7_fu_961_p2)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U7(
    .din0(grp_fu_967_p0),
    .din1(grp_fu_967_p1),
    .din2(tmp_22_1_reg_1349),
    .dout(grp_fu_967_p3)
);

top_fdct_mac_muladd_16s_14ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_29s_29_1_1_U8(
    .din0(grp_fu_974_p0),
    .din1(grp_fu_974_p1),
    .din2(tmp_22_2_reg_1354),
    .dout(grp_fu_974_p3)
);

top_fdct_mac_muladd_16s_13s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13s_29s_29_1_1_U9(
    .din0(grp_fu_981_p0),
    .din1(grp_fu_981_p1),
    .din2(tmp_22_3_reg_1359),
    .dout(grp_fu_981_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U10(
    .din0(grp_fu_988_p0),
    .din1(grp_fu_988_p1),
    .din2(tmp_22_5_reg_1364),
    .dout(grp_fu_988_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U11(
    .din0(grp_fu_995_p0),
    .din1(grp_fu_995_p1),
    .din2(tmp_22_6_reg_1369),
    .dout(grp_fu_995_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U12(
    .din0(grp_fu_1002_p0),
    .din1(grp_fu_1002_p1),
    .din2(tmp_22_7_reg_1374),
    .dout(grp_fu_1002_p3)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U13(
    .din0(tmp_22_1_2_fu_1009_p0),
    .din1(tmp_22_1_2_fu_1009_p1),
    .dout(tmp_22_1_2_fu_1009_p2)
);

top_fdct_mul_mul_16s_14s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14s_29_1_1_U14(
    .din0(tmp_22_2_2_fu_1015_p0),
    .din1(tmp_22_2_2_fu_1015_p1),
    .dout(tmp_22_2_2_fu_1015_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U15(
    .din0(tmp_22_3_2_fu_1021_p0),
    .din1(tmp_22_3_2_fu_1021_p1),
    .dout(tmp_22_3_2_fu_1021_p2)
);

top_fdct_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13ns_29_1_1_U16(
    .din0(tmp_22_5_2_fu_1027_p0),
    .din1(tmp_22_5_2_fu_1027_p1),
    .dout(tmp_22_5_2_fu_1027_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U17(
    .din0(tmp_22_6_2_fu_1033_p0),
    .din1(tmp_22_6_2_fu_1033_p1),
    .dout(tmp_22_6_2_fu_1033_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U18(
    .din0(tmp_22_7_2_fu_1039_p0),
    .din1(tmp_22_7_2_fu_1039_p1),
    .dout(tmp_22_7_2_fu_1039_p2)
);

top_fdct_mac_muladd_16s_13ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13ns_29s_29_1_1_U19(
    .din0(grp_fu_1045_p0),
    .din1(grp_fu_1045_p1),
    .din2(tmp_22_1_2_reg_1421),
    .dout(grp_fu_1045_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U20(
    .din0(grp_fu_1052_p0),
    .din1(grp_fu_1052_p1),
    .din2(tmp_22_2_2_reg_1426),
    .dout(grp_fu_1052_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U21(
    .din0(grp_fu_1059_p0),
    .din1(grp_fu_1059_p1),
    .din2(tmp_22_3_2_reg_1431),
    .dout(grp_fu_1059_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U22(
    .din0(grp_fu_1066_p0),
    .din1(grp_fu_1066_p1),
    .din2(tmp_22_5_2_reg_1436),
    .dout(grp_fu_1066_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U23(
    .din0(grp_fu_1073_p0),
    .din1(grp_fu_1073_p1),
    .din2(tmp_22_6_2_reg_1441),
    .dout(grp_fu_1073_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U24(
    .din0(grp_fu_1080_p0),
    .din1(grp_fu_1080_p1),
    .din2(tmp_22_7_2_reg_1446),
    .dout(grp_fu_1080_p3)
);

top_fdct_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13s_29_1_1_U25(
    .din0(tmp_22_1_4_fu_1087_p0),
    .din1(tmp_22_1_4_fu_1087_p1),
    .dout(tmp_22_1_4_fu_1087_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U26(
    .din0(tmp_22_2_4_fu_1093_p0),
    .din1(tmp_22_2_4_fu_1093_p1),
    .dout(tmp_22_2_4_fu_1093_p2)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U27(
    .din0(tmp_22_3_4_fu_1099_p0),
    .din1(tmp_22_3_4_fu_1099_p1),
    .dout(tmp_22_3_4_fu_1099_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U28(
    .din0(tmp_22_5_4_fu_1105_p0),
    .din1(tmp_22_5_4_fu_1105_p1),
    .dout(tmp_22_5_4_fu_1105_p2)
);

top_fdct_mul_mul_16s_14s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14s_29_1_1_U29(
    .din0(tmp_22_6_4_fu_1111_p0),
    .din1(tmp_22_6_4_fu_1111_p1),
    .dout(tmp_22_6_4_fu_1111_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U30(
    .din0(tmp_22_7_4_fu_1117_p0),
    .din1(tmp_22_7_4_fu_1117_p1),
    .dout(tmp_22_7_4_fu_1117_p2)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U31(
    .din0(grp_fu_1123_p0),
    .din1(grp_fu_1123_p1),
    .din2(tmp_22_1_4_reg_1495),
    .dout(grp_fu_1123_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U32(
    .din0(grp_fu_1130_p0),
    .din1(grp_fu_1130_p1),
    .din2(tmp_22_2_4_reg_1500),
    .dout(grp_fu_1130_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U33(
    .din0(grp_fu_1137_p0),
    .din1(grp_fu_1137_p1),
    .din2(tmp_22_3_4_reg_1505),
    .dout(grp_fu_1137_p3)
);

top_fdct_mac_muladd_16s_13s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13s_29s_29_1_1_U34(
    .din0(grp_fu_1144_p0),
    .din1(grp_fu_1144_p1),
    .din2(tmp_22_5_4_reg_1510),
    .dout(grp_fu_1144_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U35(
    .din0(grp_fu_1151_p0),
    .din1(grp_fu_1151_p1),
    .din2(tmp_22_6_4_reg_1515),
    .dout(grp_fu_1151_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U36(
    .din0(grp_fu_1158_p0),
    .din1(grp_fu_1158_p1),
    .din2(tmp_22_7_4_reg_1520),
    .dout(grp_fu_1158_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U37(
    .din0(grp_fu_1165_p0),
    .din1(grp_fu_1165_p1),
    .din2(grp_fu_1172_p3),
    .dout(grp_fu_1165_p3)
);

top_fdct_mac_muladd_16s_15s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_14ns_29_1_1_U38(
    .din0(grp_fu_1172_p0),
    .din1(grp_fu_1172_p1),
    .din2(grp_fu_1172_p2),
    .dout(grp_fu_1172_p3)
);

top_fdct_mac_muladd_16s_14ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_29s_29_1_1_U39(
    .din0(grp_fu_1181_p0),
    .din1(grp_fu_1181_p1),
    .din2(grp_fu_1188_p3),
    .dout(grp_fu_1181_p3)
);

top_fdct_mac_muladd_16s_15ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_14ns_29_1_1_U40(
    .din0(grp_fu_1188_p0),
    .din1(grp_fu_1188_p1),
    .din2(grp_fu_1188_p2),
    .dout(grp_fu_1188_p3)
);

top_fdct_mac_muladd_16s_13ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13ns_29s_29_1_1_U41(
    .din0(grp_fu_1197_p0),
    .din1(grp_fu_1197_p1),
    .din2(grp_fu_1204_p3),
    .dout(grp_fu_1197_p3)
);

top_fdct_mac_muladd_16s_15s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_14ns_29_1_1_U42(
    .din0(grp_fu_1204_p0),
    .din1(grp_fu_1204_p1),
    .din2(grp_fu_1204_p2),
    .dout(grp_fu_1204_p3)
);

top_fdct_mac_muladd_16s_14s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_14ns_29_1_1_U43(
    .din0(grp_fu_1213_p0),
    .din1(grp_fu_1213_p1),
    .din2(grp_fu_1213_p2),
    .dout(grp_fu_1213_p3)
);

top_fdct_mac_muladd_16s_14ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_14ns_29_1_1_U44(
    .din0(grp_fu_1221_p0),
    .din1(grp_fu_1221_p1),
    .din2(grp_fu_1221_p2),
    .dout(grp_fu_1221_p3)
);

top_fdct_mac_muladd_16s_13s_14ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 28 ))
top_fdct_mac_muladd_16s_13s_14ns_28_1_1_U45(
    .din0(src_addr_14_read_reg_1563),
    .din1(grp_fu_1228_p1),
    .din2(grp_fu_1228_p2),
    .dout(grp_fu_1228_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U46(
    .din0(grp_fu_1236_p0),
    .din1(grp_fu_1236_p1),
    .din2(tmp42_reg_1627),
    .dout(grp_fu_1236_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U47(
    .din0(grp_fu_1243_p0),
    .din1(grp_fu_1243_p1),
    .din2(tmp49_reg_1647),
    .dout(grp_fu_1243_p3)
);

top_fdct_mac_muladd_16s_14ns_28s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_28s_29_1_1_U48(
    .din0(grp_fu_1250_p0),
    .din1(grp_fu_1250_p1),
    .din2(tmp56_reg_1663),
    .dout(grp_fu_1250_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_src_ARREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_src_ARREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage7_01001) & (m_axi_src_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (m_axi_src_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_src_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_port_reg_off <= off;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        off_read_reg_1328 <= ap_port_reg_off;
        off_read_reg_1328_pp0_iter1_reg <= off_read_reg_1328;
        src_addr_14_read_reg_1563 <= m_axi_src_RDATA;
        tmp_22_4_s_reg_1575 <= tmp_22_4_s_fu_515_p2;
        tmp_6_reg_1570 <= tmp_6_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce))) begin
        src_addr_10_read_reg_1415 <= m_axi_src_RDATA;
        src_addr_10_reg_1298 <= sum7_cast_fu_381_p1;
        tmp39_reg_1668 <= tmp39_fu_826_p2;
        tmp_22_1_2_reg_1421 <= tmp_22_1_2_fu_1009_p2;
        tmp_22_2_2_reg_1426 <= tmp_22_2_2_fu_1015_p2;
        tmp_22_3_2_reg_1431 <= tmp_22_3_2_fu_1021_p2;
        tmp_22_5_2_reg_1436 <= tmp_22_5_2_fu_1027_p2;
        tmp_22_6_2_reg_1441 <= tmp_22_6_2_fu_1033_p2;
        tmp_22_7_2_reg_1446 <= tmp_22_7_2_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce))) begin
        src_addr_11_read_reg_1451 <= m_axi_src_RDATA;
        src_addr_11_reg_1304 <= sum9_cast_fu_405_p1;
        tmp45_reg_1477_pp0_iter2_reg <= tmp45_reg_1477;
        tmp46_reg_1673 <= tmp46_fu_864_p2;
        tmp52_reg_1482_pp0_iter2_reg <= tmp52_reg_1482;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce))) begin
        src_addr_12_read_reg_1487 <= m_axi_src_RDATA;
        src_addr_12_reg_1310 <= sum6_cast_fu_429_p1;
        src_addr_13_reg_1316 <= sum8_cast_fu_453_p1;
        src_addr_14_reg_1322 <= sum10_cast_fu_477_p1;
        tmp53_reg_1678 <= tmp53_fu_899_p2;
        tmp_22_1_4_reg_1495 <= tmp_22_1_4_fu_1087_p2;
        tmp_22_2_4_reg_1500 <= tmp_22_2_4_fu_1093_p2;
        tmp_22_3_4_reg_1505 <= tmp_22_3_4_fu_1099_p2;
        tmp_22_5_4_reg_1510 <= tmp_22_5_4_fu_1105_p2;
        tmp_22_6_4_reg_1515 <= tmp_22_6_4_fu_1111_p2;
        tmp_22_7_4_reg_1520 <= tmp_22_7_4_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce))) begin
        src_addr_13_read_reg_1525 <= m_axi_src_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        src_addr_8_read_reg_1343 <= m_axi_src_RDATA;
        src_addr_8_reg_1286 <= sum3_cast_fu_333_p1;
        tmp_15_1_reg_1632 <= {{tmp_1_fu_716_p2[28:13]}};
        tmp_15_2_reg_1637 <= {{tmp_2_10_fu_740_p2[28:13]}};
        tmp_15_3_reg_1642 <= {{tmp_3_11_fu_764_p2[28:13]}};
        tmp_22_1_reg_1349 <= tmp_22_1_fu_931_p2;
        tmp_22_2_reg_1354 <= tmp_22_2_fu_937_p2;
        tmp_22_3_reg_1359 <= tmp_22_3_fu_943_p2;
        tmp_22_5_reg_1364 <= tmp_22_5_fu_949_p2;
        tmp_22_6_reg_1369 <= tmp_22_6_fu_955_p2;
        tmp_22_7_reg_1374 <= tmp_22_7_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        src_addr_9_read_reg_1379 <= m_axi_src_RDATA;
        src_addr_9_reg_1292 <= sum5_cast_fu_357_p1;
        tmp37_reg_1400_pp0_iter2_reg <= tmp37_reg_1400;
        tmp44_reg_1405_pp0_iter2_reg <= tmp44_reg_1405;
        tmp51_reg_1410_pp0_iter2_reg <= tmp51_reg_1410;
        tmp_18_1_reg_1652 <= tmp_18_1_fu_793_p2;
        tmp_18_2_reg_1658[3 : 0] <= tmp_18_2_fu_803_p3[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        src_addr_read_reg_1337 <= m_axi_src_RDATA;
        src_addr_reg_1280 <= sum_cast_fu_309_p1;
        src_offset1_read_reg_1258 <= src_offset1;
        src_offset_cast_reg_1269[30 : 0] <= src_offset_cast_fu_295_p1[30 : 0];
        tmp4_reg_1592[28 : 13] <= tmp4_fu_583_p2[28 : 13];
        tmp5_reg_1597[28 : 13] <= tmp5_fu_589_p2[28 : 13];
        tmp6_reg_1602[28 : 13] <= tmp6_fu_613_p2[28 : 13];
        tmp_15_4_reg_1622 <= {{tmp_4_12_fu_665_p2[28:13]}};
        tmp_21_0_6_cast_reg_1580 <= tmp_21_0_6_cast_fu_563_p1;
        tmp_21_0_7_cast_reg_1587 <= tmp_21_0_7_cast_fu_573_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        tmp11_reg_1385 <= grp_fu_967_p3;
        tmp18_reg_1390 <= grp_fu_974_p3;
        tmp25_reg_1395 <= grp_fu_981_p3;
        tmp37_reg_1400 <= grp_fu_988_p3;
        tmp44_reg_1405 <= grp_fu_995_p3;
        tmp51_reg_1410 <= grp_fu_1002_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce))) begin
        tmp12_reg_1457 <= grp_fu_1045_p3;
        tmp19_reg_1462 <= grp_fu_1052_p3;
        tmp26_reg_1467 <= grp_fu_1059_p3;
        tmp38_reg_1472 <= grp_fu_1066_p3;
        tmp45_reg_1477 <= grp_fu_1073_p3;
        tmp52_reg_1482 <= grp_fu_1080_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce))) begin
        tmp14_reg_1533 <= grp_fu_1123_p3;
        tmp21_reg_1538 <= grp_fu_1130_p3;
        tmp28_reg_1543 <= grp_fu_1137_p3;
        tmp40_reg_1548 <= grp_fu_1144_p3;
        tmp47_reg_1553 <= grp_fu_1151_p3;
        tmp54_reg_1558 <= grp_fu_1158_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp15_reg_1607 <= grp_fu_1165_p3;
        tmp22_reg_1612 <= grp_fu_1181_p3;
        tmp29_reg_1617 <= grp_fu_1197_p3;
        tmp42_reg_1627 <= grp_fu_1213_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        tmp49_reg_1647 <= grp_fu_1221_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        tmp56_reg_1663 <= grp_fu_1228_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_src_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_src_ARREADY = m_axi_src_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_src_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            dst_address0 = tmp_19_6_fu_891_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            dst_address0 = tmp_19_3_fu_821_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dst_address0 = tmp_19_1_fu_798_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dst_address0 = tmp_3_fu_704_p1;
        end else begin
            dst_address0 = 'bx;
        end
    end else begin
        dst_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            dst_address1 = tmp_19_7_fu_926_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            dst_address1 = tmp_19_5_fu_859_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dst_address1 = tmp_19_2_fu_810_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dst_address1 = tmp_19_4_fu_788_p1;
        end else begin
            dst_address1 = 'bx;
        end
    end else begin
        dst_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        dst_ce0 = 1'b1;
    end else begin
        dst_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        dst_ce1 = 1'b1;
    end else begin
        dst_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            dst_d0 = {{tmp_6_13_fu_872_p2[28:13]}};
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            dst_d0 = tmp_15_3_reg_1642;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dst_d0 = tmp_15_1_reg_1632;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dst_d0 = {{tmp_s_fu_688_p2[28:13]}};
        end else begin
            dst_d0 = 'bx;
        end
    end else begin
        dst_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            dst_d1 = {{tmp_7_fu_907_p2[28:13]}};
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            dst_d1 = {{tmp_5_fu_837_p2[28:13]}};
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dst_d1 = tmp_15_2_reg_1637;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dst_d1 = tmp_15_4_reg_1622;
        end else begin
            dst_d1 = 'bx;
        end
    end else begin
        dst_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        dst_we0 = 1'b1;
    end else begin
        dst_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        dst_we1 = 1'b1;
    end else begin
        dst_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (1'b1 == ap_ce))) begin
        if ((1'b1 == ap_condition_623)) begin
            m_axi_src_ARADDR = src_addr_14_reg_1322;
        end else if ((1'b1 == ap_condition_610)) begin
            m_axi_src_ARADDR = src_addr_13_reg_1316;
        end else if ((1'b1 == ap_condition_598)) begin
            m_axi_src_ARADDR = src_addr_12_reg_1310;
        end else if ((1'b1 == ap_condition_586)) begin
            m_axi_src_ARADDR = src_addr_11_reg_1304;
        end else if ((1'b1 == ap_condition_574)) begin
            m_axi_src_ARADDR = src_addr_10_reg_1298;
        end else if ((1'b1 == ap_condition_562)) begin
            m_axi_src_ARADDR = src_addr_9_reg_1292;
        end else if ((1'b1 == ap_condition_550)) begin
            m_axi_src_ARADDR = src_addr_8_reg_1286;
        end else if ((1'b1 == ap_condition_539)) begin
            m_axi_src_ARADDR = src_addr_reg_1280;
        end else begin
            m_axi_src_ARADDR = 'bx;
        end
    end else begin
        m_axi_src_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        m_axi_src_ARVALID = 1'b1;
    end else begin
        m_axi_src_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)))) begin
        m_axi_src_RREADY = 1'b1;
    end else begin
        m_axi_src_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        src_blk_n_AR = m_axi_src_ARREADY;
    end else begin
        src_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)))) begin
        src_blk_n_R = m_axi_src_RVALID;
    end else begin
        src_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_src_RVALID == 1'b0) | (ap_sig_ioackin_m_axi_src_ARREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_src_RVALID == 1'b0) | (ap_sig_ioackin_m_axi_src_ARREADY == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_src_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_src_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state11_pp0_stage2_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state12_pp0_stage3_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state15_pp0_stage6_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state16_pp0_stage7_iter1 = (m_axi_src_RVALID == 1'b0);
end

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = (m_axi_src_RVALID == 1'b0);
end

always @ (*) begin
    ap_condition_539 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_550 = ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_562 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_574 = ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_586 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_598 = ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_610 = ((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_623 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_1002_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_1002_p1 = 29'd536864476;

assign grp_fu_1045_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1045_p1 = 29'd2260;

assign grp_fu_1052_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1052_p1 = 29'd536860209;

assign grp_fu_1059_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1059_p1 = 29'd536864476;

assign grp_fu_1066_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1066_p1 = 29'd9633;

assign grp_fu_1073_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1073_p1 = 29'd536866479;

assign grp_fu_1080_p0 = tmp_21_0_3_cast_fu_496_p1;

assign grp_fu_1080_p1 = 29'd536859550;

assign grp_fu_1123_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1123_p1 = 29'd536864476;

assign grp_fu_1130_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1130_p1 = 29'd536866479;

assign grp_fu_1137_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1137_p1 = 29'd11363;

assign grp_fu_1144_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1144_p1 = 29'd536868652;

assign grp_fu_1151_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1151_p1 = 29'd10703;

assign grp_fu_1158_p0 = tmp_21_0_5_cast_fu_502_p1;

assign grp_fu_1158_p1 = 29'd536861280;

assign grp_fu_1165_p0 = tmp_21_0_6_cast_fu_563_p1;

assign grp_fu_1165_p1 = 29'd536861280;

assign grp_fu_1172_p0 = tmp_21_0_7_cast_fu_573_p1;

assign grp_fu_1172_p1 = 29'd536859550;

assign grp_fu_1172_p2 = 29'd4096;

assign grp_fu_1181_p0 = tmp_21_0_6_cast_fu_563_p1;

assign grp_fu_1181_p1 = 29'd4433;

assign grp_fu_1188_p0 = tmp_21_0_7_cast_fu_573_p1;

assign grp_fu_1188_p1 = 29'd10703;

assign grp_fu_1188_p2 = 29'd4096;

assign grp_fu_1197_p0 = tmp_21_0_6_cast_fu_563_p1;

assign grp_fu_1197_p1 = 29'd2260;

assign grp_fu_1204_p0 = tmp_21_0_7_cast_fu_573_p1;

assign grp_fu_1204_p1 = 29'd536861280;

assign grp_fu_1204_p2 = 29'd4096;

assign grp_fu_1213_p0 = tmp_21_0_7_cast_fu_573_p1;

assign grp_fu_1213_p1 = 29'd536864476;

assign grp_fu_1213_p2 = 29'd4096;

assign grp_fu_1221_p0 = tmp_21_0_7_cast_reg_1587;

assign grp_fu_1221_p1 = 29'd4433;

assign grp_fu_1221_p2 = 29'd4096;

assign grp_fu_1228_p1 = 28'd268433196;

assign grp_fu_1228_p2 = 28'd4096;

assign grp_fu_1236_p0 = tmp_21_0_6_cast_reg_1580;

assign grp_fu_1236_p1 = 29'd11363;

assign grp_fu_1243_p0 = tmp_21_0_6_cast_reg_1580;

assign grp_fu_1243_p1 = 29'd536860209;

assign grp_fu_1250_p0 = tmp_21_0_6_cast_reg_1580;

assign grp_fu_1250_p1 = 29'd6436;

assign grp_fu_967_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_967_p1 = 29'd9633;

assign grp_fu_974_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_974_p1 = 29'd4433;

assign grp_fu_981_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_981_p1 = 29'd536868652;

assign grp_fu_988_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_988_p1 = 29'd536859550;

assign grp_fu_995_p0 = tmp_21_0_1_cast_fu_490_p1;

assign grp_fu_995_p1 = 29'd536860209;

assign m_axi_src_ARBURST = 2'd0;

assign m_axi_src_ARCACHE = 4'd0;

assign m_axi_src_ARID = 1'd0;

assign m_axi_src_ARLEN = 32'd1;

assign m_axi_src_ARLOCK = 2'd0;

assign m_axi_src_ARPROT = 3'd0;

assign m_axi_src_ARQOS = 4'd0;

assign m_axi_src_ARREGION = 4'd0;

assign m_axi_src_ARSIZE = 3'd0;

assign m_axi_src_ARUSER = 1'd0;

assign m_axi_src_AWADDR = 32'd0;

assign m_axi_src_AWBURST = 2'd0;

assign m_axi_src_AWCACHE = 4'd0;

assign m_axi_src_AWID = 1'd0;

assign m_axi_src_AWLEN = 32'd0;

assign m_axi_src_AWLOCK = 2'd0;

assign m_axi_src_AWPROT = 3'd0;

assign m_axi_src_AWQOS = 4'd0;

assign m_axi_src_AWREGION = 4'd0;

assign m_axi_src_AWSIZE = 3'd0;

assign m_axi_src_AWUSER = 1'd0;

assign m_axi_src_AWVALID = 1'b0;

assign m_axi_src_BREADY = 1'b0;

assign m_axi_src_WDATA = 16'd0;

assign m_axi_src_WID = 1'd0;

assign m_axi_src_WLAST = 1'b0;

assign m_axi_src_WSTRB = 2'd0;

assign m_axi_src_WUSER = 1'd0;

assign m_axi_src_WVALID = 1'b0;

assign off_cast_fu_681_p1 = off_read_reg_1328_pp0_iter1_reg;

assign p_shl_fu_646_p3 = {{tmp_6_reg_1570}, {13'd0}};

assign src_offset_cast1_cas_fu_299_p1 = src_offset1;

assign src_offset_cast_fu_295_p1 = src_offset;

assign sum10_cast_fu_477_p1 = sum1_fu_472_p2;

assign sum1_fu_472_p2 = (sum_0_7_cast_cast_fu_468_p1 + src_offset_cast_reg_1269);

assign sum3_cast_fu_333_p1 = sum3_fu_328_p2;

assign sum3_fu_328_p2 = (sum_0_1_cast_cast_fu_324_p1 + src_offset_cast_reg_1269);

assign sum5_cast_fu_357_p1 = sum5_fu_352_p2;

assign sum5_fu_352_p2 = (sum_0_2_cast_cast_fu_348_p1 + src_offset_cast_reg_1269);

assign sum6_cast_fu_429_p1 = sum6_fu_424_p2;

assign sum6_fu_424_p2 = (sum_0_5_cast_cast_fu_420_p1 + src_offset_cast_reg_1269);

assign sum7_cast_fu_381_p1 = sum7_fu_376_p2;

assign sum7_fu_376_p2 = (sum_0_3_cast_cast_fu_372_p1 + src_offset_cast_reg_1269);

assign sum8_cast_fu_453_p1 = sum8_fu_448_p2;

assign sum8_fu_448_p2 = (sum_0_6_cast_cast_fu_444_p1 + src_offset_cast_reg_1269);

assign sum9_cast_fu_405_p1 = sum9_fu_400_p2;

assign sum9_fu_400_p2 = (sum_0_4_cast_cast_fu_396_p1 + src_offset_cast_reg_1269);

assign sum_0_1_cast_cast_fu_324_p1 = sum_0_1_fu_319_p2;

assign sum_0_1_fu_319_p2 = (src_offset1_read_reg_1258 + 6'd1);

assign sum_0_2_cast_cast_fu_348_p1 = sum_0_2_fu_343_p2;

assign sum_0_2_fu_343_p2 = (src_offset1_read_reg_1258 + 6'd2);

assign sum_0_3_cast_cast_fu_372_p1 = sum_0_3_fu_367_p2;

assign sum_0_3_fu_367_p2 = (src_offset1_read_reg_1258 + 6'd3);

assign sum_0_4_cast_cast_fu_396_p1 = sum_0_4_fu_391_p2;

assign sum_0_4_fu_391_p2 = (src_offset1_read_reg_1258 + 6'd4);

assign sum_0_5_cast_cast_fu_420_p1 = sum_0_5_fu_415_p2;

assign sum_0_5_fu_415_p2 = (src_offset1_read_reg_1258 + 6'd5);

assign sum_0_6_cast_cast_fu_444_p1 = sum_0_6_fu_439_p2;

assign sum_0_6_fu_439_p2 = (src_offset1_read_reg_1258 + 6'd6);

assign sum_0_7_cast_cast_fu_468_p1 = sum_0_7_fu_463_p2;

assign sum_0_7_fu_463_p2 = (src_offset1_read_reg_1258 + 6'd7);

assign sum_cast_fu_309_p1 = sum_fu_303_p2;

assign sum_fu_303_p2 = (src_offset_cast1_cas_fu_299_p1 + src_offset_cast_fu_295_p1);

assign tmp10_fu_708_p2 = ($signed(tmp12_reg_1457) + $signed(tmp11_reg_1385));

assign tmp13_fu_712_p2 = ($signed(tmp15_reg_1607) + $signed(tmp14_reg_1533));

assign tmp17_fu_732_p2 = ($signed(tmp19_reg_1462) + $signed(tmp18_reg_1390));

assign tmp20_fu_736_p2 = ($signed(tmp22_reg_1612) + $signed(tmp21_reg_1538));

assign tmp24_fu_756_p2 = ($signed(tmp26_reg_1467) + $signed(tmp25_reg_1395));

assign tmp27_fu_760_p2 = ($signed(tmp29_reg_1617) + $signed(tmp28_reg_1543));

assign tmp31_fu_637_p2 = (tmp32_fu_631_p2 + tmp_23_4_2_fu_625_p2);

assign tmp32_fu_631_p2 = (tmp_22_0_3_fu_542_p3 + tmp_22_0_4_fu_549_p3);

assign tmp33_fu_659_p2 = (tmp_fu_601_p2 + tmp34_fu_653_p2);

assign tmp34_fu_653_p2 = ($signed(tmp_22_4_558_cast_fu_643_p1) - $signed(p_shl_fu_646_p3));

assign tmp36_fu_833_p2 = ($signed(tmp38_reg_1472) + $signed(tmp37_reg_1400_pp0_iter2_reg));

assign tmp39_fu_826_p2 = ($signed(grp_fu_1236_p3) + $signed(tmp40_reg_1548));

assign tmp3_fu_684_p2 = (tmp5_reg_1597 + tmp4_reg_1592);

assign tmp43_fu_868_p2 = ($signed(tmp45_reg_1477_pp0_iter2_reg) + $signed(tmp44_reg_1405_pp0_iter2_reg));

assign tmp46_fu_864_p2 = ($signed(grp_fu_1243_p3) + $signed(tmp47_reg_1553));

assign tmp4_fu_583_p2 = (tmp_4_fu_521_p3 + tmp_22_0_1_fu_528_p3);

assign tmp50_fu_903_p2 = ($signed(tmp52_reg_1482_pp0_iter2_reg) + $signed(tmp51_reg_1410_pp0_iter2_reg));

assign tmp53_fu_899_p2 = ($signed(grp_fu_1250_p3) + $signed(tmp54_reg_1558));

assign tmp5_fu_589_p2 = (tmp_22_0_2_fu_535_p3 + tmp_22_0_3_fu_542_p3);

assign tmp6_fu_613_p2 = (tmp8_fu_607_p2 + tmp7_fu_595_p2);

assign tmp7_fu_595_p2 = (tmp_22_0_4_fu_549_p3 + tmp_22_0_5_fu_556_p3);

assign tmp8_fu_607_p2 = (tmp_fu_601_p2 + tmp_22_0_6_fu_566_p3);

assign tmp_18_1_fu_793_p2 = (off_read_reg_1328_pp0_iter1_reg ^ 4'd8);

assign tmp_18_2_fu_803_p3 = {{1'd1}, {off_read_reg_1328_pp0_iter1_reg}};

assign tmp_18_3_cast_fu_818_p1 = tmp_18_1_reg_1652;

assign tmp_18_5_fu_853_p2 = ($signed(tmp_cast2_fu_830_p1) + $signed(6'd40));

assign tmp_18_6_cast_fu_888_p1 = tmp_18_2_reg_1658;

assign tmp_18_7_cast_fu_923_p1 = tmp_18_1_reg_1652;

assign tmp_18_s_fu_780_p3 = {{1'd1}, {off_cast_fu_681_p1}};

assign tmp_19_1_fu_798_p1 = $unsigned(tmp_18_1_fu_793_p2);

assign tmp_19_2_fu_810_p1 = $unsigned(tmp_18_2_fu_803_p3);

assign tmp_19_3_fu_821_p1 = $unsigned(tmp_18_3_cast_fu_818_p1);

assign tmp_19_4_fu_788_p1 = tmp_18_s_fu_780_p3;

assign tmp_19_5_fu_859_p1 = tmp_18_5_fu_853_p2;

assign tmp_19_6_fu_891_p1 = $unsigned(tmp_18_6_cast_fu_888_p1);

assign tmp_19_7_fu_926_p1 = $unsigned(tmp_18_7_cast_fu_923_p1);

assign tmp_1_fu_716_p2 = (tmp13_fu_712_p2 + tmp10_fu_708_p2);

assign tmp_21_0_1_cast_fu_490_p1 = src_addr_8_read_reg_1343;

assign tmp_21_0_2_cast_fu_493_p1 = src_addr_9_read_reg_1379;

assign tmp_21_0_3_cast_fu_496_p1 = src_addr_10_read_reg_1415;

assign tmp_21_0_4_cast_fu_499_p1 = src_addr_11_read_reg_1451;

assign tmp_21_0_5_cast1_fu_505_p1 = src_addr_12_read_reg_1487;

assign tmp_21_0_5_cast_fu_502_p1 = src_addr_12_read_reg_1487;

assign tmp_21_0_6_cast1_fu_508_p1 = src_addr_13_read_reg_1525;

assign tmp_21_0_6_cast_fu_563_p1 = src_addr_13_read_reg_1525;

assign tmp_21_0_7_cast_fu_573_p1 = src_addr_14_read_reg_1563;

assign tmp_21_cast_fu_487_p1 = src_addr_read_reg_1337;

assign tmp_22_0_1_fu_528_p3 = {{src_addr_8_read_reg_1343}, {13'd0}};

assign tmp_22_0_2_fu_535_p3 = {{src_addr_9_read_reg_1379}, {13'd0}};

assign tmp_22_0_3_fu_542_p3 = {{src_addr_10_read_reg_1415}, {13'd0}};

assign tmp_22_0_4_fu_549_p3 = {{src_addr_11_read_reg_1451}, {13'd0}};

assign tmp_22_0_5_fu_556_p3 = {{src_addr_12_read_reg_1487}, {13'd0}};

assign tmp_22_0_6_fu_566_p3 = {{src_addr_13_read_reg_1525}, {13'd0}};

assign tmp_22_0_7_fu_576_p3 = {{src_addr_14_read_reg_1563}, {13'd0}};

assign tmp_22_1_2_fu_1009_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_1_2_fu_1009_p1 = 29'd6436;

assign tmp_22_1_4_fu_1087_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_1_4_fu_1087_p1 = 29'd536868652;

assign tmp_22_1_fu_931_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_1_fu_931_p1 = 29'd11363;

assign tmp_22_2_2_fu_1015_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_2_2_fu_1015_p1 = 29'd536866479;

assign tmp_22_2_4_fu_1093_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_2_4_fu_1093_p1 = 29'd536860209;

assign tmp_22_2_fu_937_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_2_fu_937_p1 = 29'd10703;

assign tmp_22_3_2_fu_1021_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_3_2_fu_1021_p1 = 29'd536859550;

assign tmp_22_3_4_fu_1099_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_3_4_fu_1099_p1 = 29'd6436;

assign tmp_22_3_fu_943_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_3_fu_943_p1 = 29'd9633;

assign tmp_22_4_558_cast_fu_643_p1 = $signed(tmp_22_4_s_reg_1575);

assign tmp_22_4_s_fu_515_p2 = ($signed(tmp_21_0_5_cast1_fu_505_p1) + $signed(tmp_21_0_6_cast1_fu_508_p1));

assign tmp_22_5_2_fu_1027_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_5_2_fu_1027_p1 = 29'd2260;

assign tmp_22_5_4_fu_1105_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_5_4_fu_1105_p1 = 29'd536861280;

assign tmp_22_5_fu_949_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_5_fu_949_p1 = 29'd6436;

assign tmp_22_6_2_fu_1033_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_6_2_fu_1033_p1 = 29'd10703;

assign tmp_22_6_4_fu_1111_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_6_4_fu_1111_p1 = 29'd536866479;

assign tmp_22_6_fu_955_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_6_fu_955_p1 = 29'd4433;

assign tmp_22_7_2_fu_1039_p0 = tmp_21_0_2_cast_fu_493_p1;

assign tmp_22_7_2_fu_1039_p1 = 29'd9633;

assign tmp_22_7_4_fu_1117_p0 = tmp_21_0_4_cast_fu_499_p1;

assign tmp_22_7_4_fu_1117_p1 = 29'd11363;

assign tmp_22_7_fu_961_p0 = tmp_21_cast_fu_487_p1;

assign tmp_22_7_fu_961_p1 = 29'd2260;

assign tmp_23_4_1_fu_619_p2 = (tmp_4_fu_521_p3 - tmp_22_0_1_fu_528_p3);

assign tmp_23_4_2_fu_625_p2 = (tmp_23_4_1_fu_619_p2 - tmp_22_0_2_fu_535_p3);

assign tmp_2_10_fu_740_p2 = (tmp20_fu_736_p2 + tmp17_fu_732_p2);

assign tmp_3_11_fu_764_p2 = (tmp27_fu_760_p2 + tmp24_fu_756_p2);

assign tmp_3_fu_704_p1 = off_read_reg_1328_pp0_iter1_reg;

assign tmp_4_12_fu_665_p2 = (tmp33_fu_659_p2 + tmp31_fu_637_p2);

assign tmp_4_fu_521_p3 = {{src_addr_read_reg_1337}, {13'd0}};

assign tmp_5_fu_837_p2 = (tmp39_reg_1668 + tmp36_fu_833_p2);

assign tmp_6_13_fu_872_p2 = (tmp46_reg_1673 + tmp43_fu_868_p2);

assign tmp_6_fu_511_p2 = ($signed(src_addr_13_read_reg_1525) + $signed(src_addr_12_read_reg_1487));

assign tmp_7_fu_907_p2 = (tmp53_reg_1678 + tmp50_fu_903_p2);

assign tmp_cast2_fu_830_p1 = off_read_reg_1328_pp0_iter1_reg;

assign tmp_fu_601_p2 = (tmp_22_0_7_fu_576_p3 | 29'd4096);

assign tmp_s_fu_688_p2 = (tmp6_reg_1602 + tmp3_fu_684_p2);

always @ (posedge ap_clk) begin
    src_offset_cast_reg_1269[31] <= 1'b0;
    tmp4_reg_1592[12:0] <= 13'b0000000000000;
    tmp5_reg_1597[12:0] <= 13'b0000000000000;
    tmp6_reg_1602[12:0] <= 13'b1000000000000;
    tmp_18_2_reg_1658[4] <= 1'b1;
end

endmodule //new_dct_1d_1
