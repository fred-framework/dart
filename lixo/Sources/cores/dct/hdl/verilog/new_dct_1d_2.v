// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module new_dct_1d_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_dst_AWVALID,
        m_axi_dst_AWREADY,
        m_axi_dst_AWADDR,
        m_axi_dst_AWID,
        m_axi_dst_AWLEN,
        m_axi_dst_AWSIZE,
        m_axi_dst_AWBURST,
        m_axi_dst_AWLOCK,
        m_axi_dst_AWCACHE,
        m_axi_dst_AWPROT,
        m_axi_dst_AWQOS,
        m_axi_dst_AWREGION,
        m_axi_dst_AWUSER,
        m_axi_dst_WVALID,
        m_axi_dst_WREADY,
        m_axi_dst_WDATA,
        m_axi_dst_WSTRB,
        m_axi_dst_WLAST,
        m_axi_dst_WID,
        m_axi_dst_WUSER,
        m_axi_dst_ARVALID,
        m_axi_dst_ARREADY,
        m_axi_dst_ARADDR,
        m_axi_dst_ARID,
        m_axi_dst_ARLEN,
        m_axi_dst_ARSIZE,
        m_axi_dst_ARBURST,
        m_axi_dst_ARLOCK,
        m_axi_dst_ARCACHE,
        m_axi_dst_ARPROT,
        m_axi_dst_ARQOS,
        m_axi_dst_ARREGION,
        m_axi_dst_ARUSER,
        m_axi_dst_RVALID,
        m_axi_dst_RREADY,
        m_axi_dst_RDATA,
        m_axi_dst_RLAST,
        m_axi_dst_RID,
        m_axi_dst_RUSER,
        m_axi_dst_RRESP,
        m_axi_dst_BVALID,
        m_axi_dst_BREADY,
        m_axi_dst_BRESP,
        m_axi_dst_BID,
        m_axi_dst_BUSER,
        ap_ce,
        src_address0,
        src_ce0,
        src_q0,
        src_address1,
        src_ce1,
        src_q1,
        src_offset,
        dst_offset,
        off,
        dst_blk_n_AW,
        dst_blk_n_W,
        dst_blk_n_B
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_dst_AWVALID;
input   m_axi_dst_AWREADY;
output  [31:0] m_axi_dst_AWADDR;
output  [0:0] m_axi_dst_AWID;
output  [31:0] m_axi_dst_AWLEN;
output  [2:0] m_axi_dst_AWSIZE;
output  [1:0] m_axi_dst_AWBURST;
output  [1:0] m_axi_dst_AWLOCK;
output  [3:0] m_axi_dst_AWCACHE;
output  [2:0] m_axi_dst_AWPROT;
output  [3:0] m_axi_dst_AWQOS;
output  [3:0] m_axi_dst_AWREGION;
output  [0:0] m_axi_dst_AWUSER;
output   m_axi_dst_WVALID;
input   m_axi_dst_WREADY;
output  [15:0] m_axi_dst_WDATA;
output  [1:0] m_axi_dst_WSTRB;
output   m_axi_dst_WLAST;
output  [0:0] m_axi_dst_WID;
output  [0:0] m_axi_dst_WUSER;
output   m_axi_dst_ARVALID;
input   m_axi_dst_ARREADY;
output  [31:0] m_axi_dst_ARADDR;
output  [0:0] m_axi_dst_ARID;
output  [31:0] m_axi_dst_ARLEN;
output  [2:0] m_axi_dst_ARSIZE;
output  [1:0] m_axi_dst_ARBURST;
output  [1:0] m_axi_dst_ARLOCK;
output  [3:0] m_axi_dst_ARCACHE;
output  [2:0] m_axi_dst_ARPROT;
output  [3:0] m_axi_dst_ARQOS;
output  [3:0] m_axi_dst_ARREGION;
output  [0:0] m_axi_dst_ARUSER;
input   m_axi_dst_RVALID;
output   m_axi_dst_RREADY;
input  [15:0] m_axi_dst_RDATA;
input   m_axi_dst_RLAST;
input  [0:0] m_axi_dst_RID;
input  [0:0] m_axi_dst_RUSER;
input  [1:0] m_axi_dst_RRESP;
input   m_axi_dst_BVALID;
output   m_axi_dst_BREADY;
input  [1:0] m_axi_dst_BRESP;
input  [0:0] m_axi_dst_BID;
input  [0:0] m_axi_dst_BUSER;
input   ap_ce;
output  [5:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [5:0] src_address1;
output   src_ce1;
input  [15:0] src_q1;
input  [5:0] src_offset;
input  [30:0] dst_offset;
input  [3:0] off;
output   dst_blk_n_AW;
output   dst_blk_n_W;
output   dst_blk_n_B;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_dst_AWVALID;
reg[31:0] m_axi_dst_AWADDR;
reg m_axi_dst_WVALID;
reg[15:0] m_axi_dst_WDATA;
reg m_axi_dst_BREADY;
reg[5:0] src_address0;
reg src_ce0;
reg[5:0] src_address1;
reg src_ce1;
reg dst_blk_n_AW;
reg dst_blk_n_W;
reg dst_blk_n_B;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_sig_ioackin_m_axi_dst_WREADY;
reg    ap_sig_ioackin_m_axi_dst_AWREADY;
reg    ap_block_state8_io;
reg    ap_block_state16_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [5:0] src_offset_read_reg_1284;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_state9_io;
reg    ap_block_state17_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg  signed [15:0] src_load_reg_1304;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_state10_io;
reg    ap_block_state18_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg  signed [15:0] src_load_4_reg_1320;
wire  signed [28:0] tmp_11_cast_fu_367_p1;
reg  signed [28:0] tmp_11_cast_reg_1326;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
reg    ap_block_state11_io;
reg    ap_block_state19_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
reg  signed [15:0] src_load_1_reg_1333;
reg  signed [15:0] src_load_2_reg_1339;
wire  signed [28:0] tmp_11_0_4_cast_fu_380_p1;
reg  signed [28:0] tmp_11_0_4_cast_reg_1350;
wire  signed [28:0] tmp_12_1_fu_970_p2;
reg  signed [28:0] tmp_12_1_reg_1362;
wire  signed [28:0] tmp_12_1_4_fu_976_p2;
reg  signed [28:0] tmp_12_1_4_reg_1367;
wire  signed [28:0] tmp_12_2_fu_982_p2;
reg  signed [28:0] tmp_12_2_reg_1372;
wire  signed [28:0] tmp_12_2_4_fu_988_p2;
reg  signed [28:0] tmp_12_2_4_reg_1377;
wire  signed [28:0] tmp_12_3_fu_994_p2;
reg  signed [28:0] tmp_12_3_reg_1382;
wire  signed [28:0] tmp_12_3_4_fu_1000_p2;
reg  signed [28:0] tmp_12_3_4_reg_1387;
wire  signed [28:0] tmp_11_0_1_cast_fu_393_p1;
reg  signed [28:0] tmp_11_0_1_cast_reg_1392;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state12_pp0_stage3_iter1;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage3_11001;
wire  signed [28:0] tmp_11_0_2_cast_fu_396_p1;
reg  signed [28:0] tmp_11_0_2_cast_reg_1400;
reg  signed [15:0] src_load_3_reg_1407;
reg  signed [15:0] src_load_5_reg_1413;
wire  signed [28:0] tmp_12_1_2_fu_1013_p2;
reg  signed [28:0] tmp_12_1_2_reg_1431;
wire  signed [28:0] grp_fu_1006_p3;
reg  signed [28:0] tmp1_reg_1436;
wire  signed [28:0] tmp_12_2_2_fu_1026_p2;
reg  signed [28:0] tmp_12_2_2_reg_1441;
wire  signed [28:0] grp_fu_1019_p3;
reg  signed [28:0] tmp14_reg_1446;
wire  signed [28:0] tmp_12_3_2_fu_1032_p2;
reg  signed [28:0] tmp_12_3_2_reg_1451;
wire  signed [28:0] tmp_12_5_4_fu_1038_p2;
reg  signed [28:0] tmp_12_5_4_reg_1456;
reg   [3:0] off_read_reg_1461;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state13_pp0_stage4_iter1;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage4_11001;
wire   [31:0] dst_offset_cast_fu_419_p1;
reg   [31:0] dst_offset_cast_reg_1469;
wire  signed [28:0] tmp_11_0_3_cast_fu_423_p1;
reg  signed [28:0] tmp_11_0_3_cast_reg_1480;
wire  signed [28:0] tmp_11_0_5_cast_fu_429_p1;
reg  signed [28:0] tmp_11_0_5_cast_reg_1488;
reg  signed [15:0] src_load_6_reg_1495;
reg  signed [15:0] src_load_7_reg_1500;
wire   [28:0] tmp_fu_452_p2;
reg   [28:0] tmp_reg_1506;
wire   [28:0] tmp8_fu_458_p2;
reg   [28:0] tmp8_reg_1511;
reg   [31:0] dst_addr_reg_1516;
wire  signed [28:0] grp_fu_1043_p3;
reg  signed [28:0] tmp2_reg_1522;
wire  signed [28:0] grp_fu_1050_p3;
reg  signed [28:0] tmp10_reg_1527;
wire  signed [28:0] grp_fu_1057_p3;
reg  signed [28:0] tmp15_reg_1532;
wire  signed [28:0] grp_fu_1064_p3;
reg  signed [28:0] tmp17_reg_1537;
wire  signed [28:0] grp_fu_1071_p3;
reg  signed [28:0] tmp21_reg_1542;
wire  signed [28:0] grp_fu_1077_p3;
reg  signed [28:0] tmp24_reg_1547;
wire   [15:0] tmp_2_fu_484_p2;
reg   [15:0] tmp_2_reg_1552;
wire   [16:0] tmp_12_4_s_fu_489_p2;
reg   [16:0] tmp_12_4_s_reg_1557;
wire  signed [28:0] tmp_11_0_6_cast_fu_537_p1;
reg  signed [28:0] tmp_11_0_6_cast_reg_1562;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state14_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire  signed [28:0] tmp_11_0_7_cast_fu_540_p1;
reg  signed [28:0] tmp_11_0_7_cast_reg_1569;
reg   [15:0] tmp_5_reg_1575;
wire  signed [28:0] grp_fu_1084_p3;
reg  signed [28:0] tmp12_reg_1580;
wire  signed [3:0] tmp_8_1_fu_588_p2;
reg  signed [3:0] tmp_8_1_reg_1585;
reg   [31:0] dst_addr_1_reg_1591;
wire  signed [28:0] grp_fu_1100_p3;
reg  signed [28:0] tmp19_reg_1597;
wire  signed [28:0] grp_fu_1116_p3;
reg  signed [28:0] tmp26_reg_1602;
reg   [15:0] tmp_5_4_reg_1607;
reg   [15:0] tmp_5_1_reg_1612;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state15_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg   [15:0] tmp_5_2_reg_1617;
wire  signed [4:0] tmp_8_2_fu_721_p3;
reg  signed [4:0] tmp_8_2_reg_1622;
reg   [31:0] dst_addr_2_reg_1627;
reg   [15:0] tmp_5_3_reg_1633;
wire  signed [28:0] tmp_12_5_fu_1139_p2;
reg  signed [28:0] tmp_12_5_reg_1638;
wire  signed [28:0] tmp_12_5_2_fu_1144_p2;
reg  signed [28:0] tmp_12_5_2_reg_1643;
wire  signed [28:0] grp_fu_1149_p3;
reg  signed [28:0] tmp37_reg_1648;
wire  signed [28:0] tmp_12_6_4_fu_1163_p2;
reg  signed [28:0] tmp_12_6_4_reg_1653;
reg   [31:0] dst_addr_3_reg_1658;
(* use_dsp48 = "no" *) wire   [28:0] tmp38_fu_793_p2;
reg   [28:0] tmp38_reg_1664;
wire  signed [28:0] tmp_12_6_fu_1175_p2;
reg  signed [28:0] tmp_12_6_reg_1669;
wire  signed [28:0] tmp_12_6_2_fu_1180_p2;
reg  signed [28:0] tmp_12_6_2_reg_1674;
wire  signed [28:0] grp_fu_1185_p3;
reg  signed [28:0] tmp44_reg_1679;
wire  signed [28:0] tmp_12_7_4_fu_1199_p2;
reg  signed [28:0] tmp_12_7_4_reg_1684;
reg   [31:0] dst_addr_4_reg_1689;
reg   [15:0] tmp_5_5_reg_1695;
(* use_dsp48 = "no" *) wire   [28:0] tmp45_fu_846_p2;
reg   [28:0] tmp45_reg_1700;
wire  signed [28:0] tmp_12_7_fu_1225_p2;
reg  signed [28:0] tmp_12_7_reg_1705;
wire  signed [28:0] tmp_12_7_2_fu_1230_p2;
reg  signed [28:0] tmp_12_7_2_reg_1710;
wire  signed [27:0] grp_fu_1235_p3;
reg  signed [27:0] tmp50_reg_1715;
reg   [31:0] dst_addr_5_reg_1720;
reg   [15:0] tmp_5_6_reg_1726;
reg   [31:0] dst_addr_6_reg_1731;
wire  signed [28:0] grp_fu_1257_p3;
reg  signed [28:0] tmp46_reg_1737;
wire  signed [28:0] grp_fu_1263_p3;
reg  signed [28:0] tmp47_reg_1742;
(* use_dsp48 = "no" *) wire   [28:0] tmp52_fu_925_p2;
reg   [28:0] tmp52_reg_1747;
reg   [31:0] dst_addr_7_reg_1752;
reg   [15:0] tmp_5_7_reg_1758;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [30:0] ap_port_reg_dst_offset;
reg   [3:0] ap_port_reg_off;
wire   [63:0] src_offset_cast1_fu_331_p1;
wire   [63:0] sum_0_4_cast_fu_342_p1;
wire   [63:0] sum_0_1_cast_fu_352_p1;
wire   [63:0] sum_0_2_cast_fu_362_p1;
wire   [63:0] sum_0_3_cast_fu_375_p1;
wire   [63:0] sum_0_5_cast_fu_388_p1;
wire   [63:0] sum_0_6_cast_fu_404_p1;
wire   [63:0] sum_0_7_cast_fu_414_p1;
wire   [63:0] sum_cast_fu_474_p1;
wire   [63:0] sum2_cast_fu_602_p1;
wire   [63:0] sum4_cast_fu_737_p1;
wire   [63:0] sum6_cast_fu_783_p1;
wire   [63:0] sum8_cast_fu_817_p1;
wire   [63:0] sum1_cast_fu_871_p1;
wire   [63:0] sum3_cast_fu_912_p1;
wire   [63:0] sum5_cast_fu_941_p1;
reg    ap_reg_ioackin_m_axi_dst_AWREADY;
reg    ap_block_pp0_stage5_01001;
reg    ap_reg_ioackin_m_axi_dst_WREADY;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
wire   [5:0] sum_0_4_fu_336_p2;
wire   [5:0] sum_0_1_fu_347_p2;
wire   [5:0] sum_0_2_fu_357_p2;
wire   [5:0] sum_0_3_fu_370_p2;
wire   [5:0] sum_0_5_fu_383_p2;
wire   [5:0] sum_0_6_fu_399_p2;
wire   [5:0] sum_0_7_fu_409_p2;
wire  signed [15:0] tmp_11_0_6_cast1_fu_432_p0;
wire  signed [15:0] tmp_12_0_6_fu_436_p1;
wire  signed [15:0] tmp_12_0_7_fu_444_p1;
wire   [28:0] tmp_12_0_7_fu_444_p3;
wire   [28:0] tmp_12_0_6_fu_436_p3;
wire   [31:0] tmp_9_cast_fu_464_p1;
wire   [31:0] sum_fu_468_p2;
wire  signed [15:0] tmp_2_fu_484_p0;
wire  signed [16:0] tmp_11_0_5_cast1_fu_426_p1;
wire  signed [16:0] tmp_11_0_6_cast1_fu_432_p1;
wire   [28:0] tmp_s_fu_495_p3;
wire   [28:0] tmp_12_0_1_fu_502_p3;
wire   [28:0] tmp_12_0_2_fu_509_p3;
wire   [28:0] tmp_12_0_3_fu_516_p3;
wire   [28:0] tmp5_fu_549_p2;
wire   [28:0] tmp4_fu_543_p2;
wire   [28:0] tmp_12_0_4_fu_523_p3;
wire   [28:0] tmp_12_0_5_fu_530_p3;
wire   [28:0] tmp7_fu_561_p2;
wire   [28:0] tmp6_fu_567_p2;
wire   [28:0] tmp3_fu_555_p2;
wire   [28:0] tmp_3_fu_572_p2;
wire   [31:0] tmp_9_1_cast_fu_593_p1;
wire   [31:0] sum2_fu_597_p2;
wire   [28:0] tmp_13_4_1_fu_612_p2;
wire   [28:0] tmp28_fu_624_p2;
wire   [28:0] tmp_13_4_2_fu_618_p2;
wire  signed [28:0] tmp_12_4_558_cast_fu_636_p1;
wire   [28:0] p_shl_fu_639_p3;
wire   [28:0] tmp30_fu_646_p2;
wire   [28:0] tmp31_fu_652_p2;
wire   [28:0] tmp29_fu_630_p2;
wire   [28:0] tmp_3_4_fu_657_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp13_fu_677_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp9_fu_673_p2;
wire   [28:0] tmp_3_1_fu_681_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp20_fu_701_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp16_fu_697_p2;
wire   [28:0] tmp_3_2_fu_705_p2;
wire   [31:0] tmp_9_2_cast_fu_728_p1;
wire   [31:0] sum4_fu_732_p2;
wire  signed [28:0] grp_fu_1132_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp27_fu_751_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp23_fu_747_p2;
wire   [28:0] tmp_3_3_fu_755_p2;
wire  signed [4:0] tmp_8_3_cast_fu_771_p1;
wire   [31:0] tmp_9_3_cast_fu_774_p1;
wire   [31:0] sum6_fu_778_p2;
wire  signed [28:0] grp_fu_1168_p3;
wire   [4:0] off_cast_fu_797_p1;
wire   [5:0] tmp_8_s_fu_800_p3;
wire   [31:0] tmp_9_4_cast_fu_808_p1;
wire   [31:0] sum8_fu_812_p2;
wire  signed [28:0] grp_fu_1211_p3;
wire  signed [28:0] grp_fu_1204_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp34_fu_827_p2;
wire   [28:0] tmp_3_5_fu_831_p2;
wire  signed [28:0] grp_fu_1218_p3;
wire   [5:0] tmp_cast1_fu_853_p1;
wire   [5:0] tmp_8_5_fu_856_p2;
wire   [31:0] tmp_9_5_cast_fu_862_p1;
wire   [31:0] sum1_fu_866_p2;
wire  signed [28:0] grp_fu_1250_p3;
wire  signed [28:0] grp_fu_1243_p3;
(* use_dsp48 = "no" *) wire   [28:0] tmp41_fu_881_p2;
wire   [28:0] tmp_3_6_fu_885_p2;
wire  signed [5:0] tmp_8_6_cast_fu_900_p1;
wire   [31:0] tmp_9_6_cast_fu_903_p1;
wire   [31:0] sum3_fu_907_p2;
wire  signed [28:0] grp_fu_1276_p3;
wire  signed [28:0] grp_fu_1269_p3;
wire  signed [5:0] tmp_8_7_cast_fu_929_p1;
wire   [31:0] tmp_9_7_cast_fu_932_p1;
wire   [31:0] sum5_fu_936_p2;
(* use_dsp48 = "no" *) wire   [28:0] tmp48_fu_951_p2;
wire   [28:0] tmp_3_7_fu_955_p2;
wire  signed [15:0] tmp_12_1_fu_970_p0;
wire   [14:0] tmp_12_1_fu_970_p1;
wire  signed [15:0] tmp_12_1_4_fu_976_p0;
wire  signed [12:0] tmp_12_1_4_fu_976_p1;
wire  signed [15:0] tmp_12_2_fu_982_p0;
wire   [14:0] tmp_12_2_fu_982_p1;
wire  signed [15:0] tmp_12_2_4_fu_988_p0;
wire  signed [14:0] tmp_12_2_4_fu_988_p1;
wire  signed [15:0] tmp_12_3_fu_994_p0;
wire   [14:0] tmp_12_3_fu_994_p1;
wire  signed [15:0] tmp_12_3_4_fu_1000_p0;
wire   [13:0] tmp_12_3_4_fu_1000_p1;
wire  signed [15:0] grp_fu_1006_p0;
wire   [14:0] grp_fu_1006_p1;
wire  signed [15:0] tmp_12_1_2_fu_1013_p0;
wire   [13:0] tmp_12_1_2_fu_1013_p1;
wire  signed [15:0] grp_fu_1019_p0;
wire   [13:0] grp_fu_1019_p1;
wire  signed [15:0] tmp_12_2_2_fu_1026_p0;
wire  signed [13:0] tmp_12_2_2_fu_1026_p1;
wire  signed [15:0] tmp_12_3_2_fu_1032_p0;
wire  signed [14:0] tmp_12_3_2_fu_1032_p1;
wire  signed [15:0] tmp_12_5_4_fu_1038_p0;
wire  signed [14:0] tmp_12_5_4_fu_1038_p1;
wire  signed [15:0] grp_fu_1043_p0;
wire   [12:0] grp_fu_1043_p1;
wire  signed [15:0] grp_fu_1050_p0;
wire  signed [13:0] grp_fu_1050_p1;
wire  signed [15:0] grp_fu_1057_p0;
wire  signed [14:0] grp_fu_1057_p1;
wire  signed [15:0] grp_fu_1064_p0;
wire  signed [13:0] grp_fu_1064_p1;
wire  signed [15:0] grp_fu_1071_p0;
wire  signed [12:0] grp_fu_1071_p1;
wire  signed [15:0] grp_fu_1077_p0;
wire   [14:0] grp_fu_1077_p1;
wire  signed [15:0] grp_fu_1084_p0;
wire  signed [14:0] grp_fu_1084_p1;
wire  signed [28:0] grp_fu_1091_p3;
wire  signed [15:0] grp_fu_1091_p0;
wire  signed [14:0] grp_fu_1091_p1;
wire   [13:0] grp_fu_1091_p2;
wire  signed [15:0] grp_fu_1100_p0;
wire   [13:0] grp_fu_1100_p1;
wire  signed [28:0] grp_fu_1107_p3;
wire  signed [15:0] grp_fu_1107_p0;
wire   [14:0] grp_fu_1107_p1;
wire   [13:0] grp_fu_1107_p2;
wire  signed [15:0] grp_fu_1116_p0;
wire   [12:0] grp_fu_1116_p1;
wire  signed [28:0] grp_fu_1123_p3;
wire  signed [15:0] grp_fu_1123_p0;
wire  signed [14:0] grp_fu_1123_p1;
wire   [13:0] grp_fu_1123_p2;
wire  signed [15:0] grp_fu_1132_p0;
wire  signed [13:0] grp_fu_1132_p1;
wire  signed [15:0] tmp_12_5_fu_1139_p0;
wire   [13:0] tmp_12_5_fu_1139_p1;
wire  signed [15:0] tmp_12_5_2_fu_1144_p0;
wire   [12:0] tmp_12_5_2_fu_1144_p1;
wire  signed [15:0] grp_fu_1149_p0;
wire   [14:0] grp_fu_1149_p1;
wire  signed [28:0] grp_fu_1155_p3;
wire  signed [15:0] grp_fu_1155_p0;
wire  signed [13:0] grp_fu_1155_p1;
wire   [13:0] grp_fu_1155_p2;
wire  signed [15:0] tmp_12_6_4_fu_1163_p0;
wire  signed [13:0] tmp_12_6_4_fu_1163_p1;
wire  signed [15:0] grp_fu_1168_p0;
wire  signed [12:0] grp_fu_1168_p1;
wire  signed [15:0] tmp_12_6_fu_1175_p0;
wire   [13:0] tmp_12_6_fu_1175_p1;
wire  signed [15:0] tmp_12_6_2_fu_1180_p0;
wire   [14:0] tmp_12_6_2_fu_1180_p1;
wire  signed [15:0] grp_fu_1185_p0;
wire  signed [14:0] grp_fu_1185_p1;
wire  signed [28:0] grp_fu_1191_p3;
wire  signed [15:0] grp_fu_1191_p0;
wire   [13:0] grp_fu_1191_p1;
wire   [13:0] grp_fu_1191_p2;
wire  signed [15:0] tmp_12_7_4_fu_1199_p0;
wire   [14:0] tmp_12_7_4_fu_1199_p1;
wire  signed [15:0] grp_fu_1204_p0;
wire  signed [14:0] grp_fu_1204_p1;
wire  signed [15:0] grp_fu_1211_p0;
wire   [14:0] grp_fu_1211_p1;
wire  signed [15:0] grp_fu_1218_p0;
wire   [14:0] grp_fu_1218_p1;
wire  signed [15:0] tmp_12_7_fu_1225_p0;
wire   [12:0] tmp_12_7_fu_1225_p1;
wire  signed [15:0] tmp_12_7_2_fu_1230_p0;
wire   [14:0] tmp_12_7_2_fu_1230_p1;
wire  signed [12:0] grp_fu_1235_p1;
wire   [13:0] grp_fu_1235_p2;
wire  signed [15:0] grp_fu_1243_p0;
wire  signed [14:0] grp_fu_1243_p1;
wire  signed [15:0] grp_fu_1250_p0;
wire  signed [13:0] grp_fu_1250_p1;
wire  signed [15:0] grp_fu_1257_p0;
wire  signed [13:0] grp_fu_1257_p1;
wire  signed [15:0] grp_fu_1263_p0;
wire  signed [14:0] grp_fu_1263_p1;
wire  signed [15:0] grp_fu_1269_p0;
wire  signed [14:0] grp_fu_1269_p1;
wire  signed [15:0] grp_fu_1276_p0;
wire   [13:0] grp_fu_1276_p1;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
reg    ap_condition_559;
reg    ap_condition_572;
reg    ap_condition_590;
reg    ap_condition_609;
reg    ap_condition_627;
reg    ap_condition_645;
reg    ap_condition_665;
reg    ap_condition_683;
reg    ap_condition_698;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_reg_ioackin_m_axi_dst_AWREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_dst_WREADY = 1'b0;
end

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U72(
    .din0(tmp_12_1_fu_970_p0),
    .din1(tmp_12_1_fu_970_p1),
    .dout(tmp_12_1_fu_970_p2)
);

top_fdct_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13s_29_1_1_U73(
    .din0(tmp_12_1_4_fu_976_p0),
    .din1(tmp_12_1_4_fu_976_p1),
    .dout(tmp_12_1_4_fu_976_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U74(
    .din0(tmp_12_2_fu_982_p0),
    .din1(tmp_12_2_fu_982_p1),
    .dout(tmp_12_2_fu_982_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U75(
    .din0(tmp_12_2_4_fu_988_p0),
    .din1(tmp_12_2_4_fu_988_p1),
    .dout(tmp_12_2_4_fu_988_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U76(
    .din0(tmp_12_3_fu_994_p0),
    .din1(tmp_12_3_fu_994_p1),
    .dout(tmp_12_3_fu_994_p2)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U77(
    .din0(tmp_12_3_4_fu_1000_p0),
    .din1(tmp_12_3_4_fu_1000_p1),
    .dout(tmp_12_3_4_fu_1000_p2)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U78(
    .din0(grp_fu_1006_p0),
    .din1(grp_fu_1006_p1),
    .din2(tmp_12_1_reg_1362),
    .dout(grp_fu_1006_p3)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U79(
    .din0(tmp_12_1_2_fu_1013_p0),
    .din1(tmp_12_1_2_fu_1013_p1),
    .dout(tmp_12_1_2_fu_1013_p2)
);

top_fdct_mac_muladd_16s_14ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_29s_29_1_1_U80(
    .din0(grp_fu_1019_p0),
    .din1(grp_fu_1019_p1),
    .din2(tmp_12_2_reg_1372),
    .dout(grp_fu_1019_p3)
);

top_fdct_mul_mul_16s_14s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14s_29_1_1_U81(
    .din0(tmp_12_2_2_fu_1026_p0),
    .din1(tmp_12_2_2_fu_1026_p1),
    .dout(tmp_12_2_2_fu_1026_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U82(
    .din0(tmp_12_3_2_fu_1032_p0),
    .din1(tmp_12_3_2_fu_1032_p1),
    .dout(tmp_12_3_2_fu_1032_p2)
);

top_fdct_mul_mul_16s_15s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15s_29_1_1_U83(
    .din0(tmp_12_5_4_fu_1038_p0),
    .din1(tmp_12_5_4_fu_1038_p1),
    .dout(tmp_12_5_4_fu_1038_p2)
);

top_fdct_mac_muladd_16s_13ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13ns_29s_29_1_1_U84(
    .din0(grp_fu_1043_p0),
    .din1(grp_fu_1043_p1),
    .din2(tmp_12_1_2_reg_1431),
    .dout(grp_fu_1043_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U85(
    .din0(grp_fu_1050_p0),
    .din1(grp_fu_1050_p1),
    .din2(tmp_12_1_4_reg_1367),
    .dout(grp_fu_1050_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U86(
    .din0(grp_fu_1057_p0),
    .din1(grp_fu_1057_p1),
    .din2(tmp_12_2_2_reg_1441),
    .dout(grp_fu_1057_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U87(
    .din0(grp_fu_1064_p0),
    .din1(grp_fu_1064_p1),
    .din2(tmp_12_2_4_reg_1377),
    .dout(grp_fu_1064_p3)
);

top_fdct_mac_muladd_16s_13s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13s_29s_29_1_1_U88(
    .din0(grp_fu_1071_p0),
    .din1(grp_fu_1071_p1),
    .din2(tmp_12_3_reg_1382),
    .dout(grp_fu_1071_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U89(
    .din0(grp_fu_1077_p0),
    .din1(grp_fu_1077_p1),
    .din2(tmp_12_3_4_reg_1387),
    .dout(grp_fu_1077_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U90(
    .din0(grp_fu_1084_p0),
    .din1(grp_fu_1084_p1),
    .din2(grp_fu_1091_p3),
    .dout(grp_fu_1084_p3)
);

top_fdct_mac_muladd_16s_15s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_14ns_29_1_1_U91(
    .din0(grp_fu_1091_p0),
    .din1(grp_fu_1091_p1),
    .din2(grp_fu_1091_p2),
    .dout(grp_fu_1091_p3)
);

top_fdct_mac_muladd_16s_14ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_29s_29_1_1_U92(
    .din0(grp_fu_1100_p0),
    .din1(grp_fu_1100_p1),
    .din2(grp_fu_1107_p3),
    .dout(grp_fu_1100_p3)
);

top_fdct_mac_muladd_16s_15ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_14ns_29_1_1_U93(
    .din0(grp_fu_1107_p0),
    .din1(grp_fu_1107_p1),
    .din2(grp_fu_1107_p2),
    .dout(grp_fu_1107_p3)
);

top_fdct_mac_muladd_16s_13ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13ns_29s_29_1_1_U94(
    .din0(grp_fu_1116_p0),
    .din1(grp_fu_1116_p1),
    .din2(grp_fu_1123_p3),
    .dout(grp_fu_1116_p3)
);

top_fdct_mac_muladd_16s_15s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_14ns_29_1_1_U95(
    .din0(grp_fu_1123_p0),
    .din1(grp_fu_1123_p1),
    .din2(grp_fu_1123_p2),
    .dout(grp_fu_1123_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U96(
    .din0(grp_fu_1132_p0),
    .din1(grp_fu_1132_p1),
    .din2(tmp_12_3_2_reg_1451),
    .dout(grp_fu_1132_p3)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U97(
    .din0(tmp_12_5_fu_1139_p0),
    .din1(tmp_12_5_fu_1139_p1),
    .dout(tmp_12_5_fu_1139_p2)
);

top_fdct_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13ns_29_1_1_U98(
    .din0(tmp_12_5_2_fu_1144_p0),
    .din1(tmp_12_5_2_fu_1144_p1),
    .dout(tmp_12_5_2_fu_1144_p2)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U99(
    .din0(grp_fu_1149_p0),
    .din1(grp_fu_1149_p1),
    .din2(grp_fu_1155_p3),
    .dout(grp_fu_1149_p3)
);

top_fdct_mac_muladd_16s_14s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_14ns_29_1_1_U100(
    .din0(grp_fu_1155_p0),
    .din1(grp_fu_1155_p1),
    .din2(grp_fu_1155_p2),
    .dout(grp_fu_1155_p3)
);

top_fdct_mul_mul_16s_14s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14s_29_1_1_U101(
    .din0(tmp_12_6_4_fu_1163_p0),
    .din1(tmp_12_6_4_fu_1163_p1),
    .dout(tmp_12_6_4_fu_1163_p2)
);

top_fdct_mac_muladd_16s_13s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_13s_29s_29_1_1_U102(
    .din0(grp_fu_1168_p0),
    .din1(grp_fu_1168_p1),
    .din2(tmp_12_5_4_reg_1456),
    .dout(grp_fu_1168_p3)
);

top_fdct_mul_mul_16s_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_14ns_29_1_1_U103(
    .din0(tmp_12_6_fu_1175_p0),
    .din1(tmp_12_6_fu_1175_p1),
    .dout(tmp_12_6_fu_1175_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U104(
    .din0(tmp_12_6_2_fu_1180_p0),
    .din1(tmp_12_6_2_fu_1180_p1),
    .dout(tmp_12_6_2_fu_1180_p2)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U105(
    .din0(grp_fu_1185_p0),
    .din1(grp_fu_1185_p1),
    .din2(grp_fu_1191_p3),
    .dout(grp_fu_1185_p3)
);

top_fdct_mac_muladd_16s_14ns_14ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_14ns_29_1_1_U106(
    .din0(grp_fu_1191_p0),
    .din1(grp_fu_1191_p1),
    .din2(grp_fu_1191_p2),
    .dout(grp_fu_1191_p3)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U107(
    .din0(tmp_12_7_4_fu_1199_p0),
    .din1(tmp_12_7_4_fu_1199_p1),
    .dout(tmp_12_7_4_fu_1199_p2)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U108(
    .din0(grp_fu_1204_p0),
    .din1(grp_fu_1204_p1),
    .din2(tmp_12_5_reg_1638),
    .dout(grp_fu_1204_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U109(
    .din0(grp_fu_1211_p0),
    .din1(grp_fu_1211_p1),
    .din2(tmp_12_5_2_reg_1643),
    .dout(grp_fu_1211_p3)
);

top_fdct_mac_muladd_16s_15ns_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15ns_29s_29_1_1_U110(
    .din0(grp_fu_1218_p0),
    .din1(grp_fu_1218_p1),
    .din2(tmp_12_6_4_reg_1653),
    .dout(grp_fu_1218_p3)
);

top_fdct_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_13ns_29_1_1_U111(
    .din0(tmp_12_7_fu_1225_p0),
    .din1(tmp_12_7_fu_1225_p1),
    .dout(tmp_12_7_fu_1225_p2)
);

top_fdct_mul_mul_16s_15ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
top_fdct_mul_mul_16s_15ns_29_1_1_U112(
    .din0(tmp_12_7_2_fu_1230_p0),
    .din1(tmp_12_7_2_fu_1230_p1),
    .dout(tmp_12_7_2_fu_1230_p2)
);

top_fdct_mac_muladd_16s_13s_14ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 28 ))
top_fdct_mac_muladd_16s_13s_14ns_28_1_1_U113(
    .din0(src_load_7_reg_1500),
    .din1(grp_fu_1235_p1),
    .din2(grp_fu_1235_p2),
    .dout(grp_fu_1235_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U114(
    .din0(grp_fu_1243_p0),
    .din1(grp_fu_1243_p1),
    .din2(tmp_12_6_reg_1669),
    .dout(grp_fu_1243_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U115(
    .din0(grp_fu_1250_p0),
    .din1(grp_fu_1250_p1),
    .din2(tmp_12_6_2_reg_1674),
    .dout(grp_fu_1250_p3)
);

top_fdct_mac_muladd_16s_14s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14s_29s_29_1_1_U116(
    .din0(grp_fu_1257_p0),
    .din1(grp_fu_1257_p1),
    .din2(tmp_12_7_reg_1705),
    .dout(grp_fu_1257_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U117(
    .din0(grp_fu_1263_p0),
    .din1(grp_fu_1263_p1),
    .din2(tmp_12_7_2_reg_1710),
    .dout(grp_fu_1263_p3)
);

top_fdct_mac_muladd_16s_15s_29s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_15s_29s_29_1_1_U118(
    .din0(grp_fu_1269_p0),
    .din1(grp_fu_1269_p1),
    .din2(tmp_12_7_4_reg_1684),
    .dout(grp_fu_1269_p3)
);

top_fdct_mac_muladd_16s_14ns_28s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 28 ),
    .dout_WIDTH( 29 ))
top_fdct_mac_muladd_16s_14ns_28s_29_1_1_U119(
    .din0(grp_fu_1276_p0),
    .din1(grp_fu_1276_p1),
    .din2(tmp50_reg_1715),
    .dout(grp_fu_1276_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_dst_AWREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_dst_AWREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage7_01001) & (m_axi_dst_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (m_axi_dst_AWREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_dst_AWREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_dst_WREADY <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_dst_WREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage7_01001) & (m_axi_dst_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (m_axi_dst_WREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)))) begin
            ap_reg_ioackin_m_axi_dst_WREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        ap_port_reg_dst_offset <= dst_offset;
        ap_port_reg_off <= off;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce))) begin
        dst_addr_1_reg_1591 <= sum2_cast_fu_602_p1;
        tmp_11_0_6_cast_reg_1562 <= tmp_11_0_6_cast_fu_537_p1;
        tmp_11_0_7_cast_reg_1569 <= tmp_11_0_7_cast_fu_540_p1;
        tmp_5_4_reg_1607 <= {{tmp_3_4_fu_657_p2[28:13]}};
        tmp_5_reg_1575 <= {{tmp_3_fu_572_p2[28:13]}};
        tmp_8_1_reg_1585 <= tmp_8_1_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce))) begin
        dst_addr_2_reg_1627 <= sum4_cast_fu_737_p1;
        tmp_12_5_2_reg_1643 <= tmp_12_5_2_fu_1144_p2;
        tmp_12_5_reg_1638 <= tmp_12_5_fu_1139_p2;
        tmp_12_6_4_reg_1653 <= tmp_12_6_4_fu_1163_p2;
        tmp_5_1_reg_1612 <= {{tmp_3_1_fu_681_p2[28:13]}};
        tmp_5_2_reg_1617 <= {{tmp_3_2_fu_705_p2[28:13]}};
        tmp_5_3_reg_1633 <= {{tmp_3_3_fu_755_p2[28:13]}};
        tmp_8_2_reg_1622[3 : 0] <= tmp_8_2_fu_721_p3[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        dst_addr_3_reg_1658 <= sum6_cast_fu_783_p1;
        tmp38_reg_1664 <= tmp38_fu_793_p2;
        tmp_12_6_2_reg_1674 <= tmp_12_6_2_fu_1180_p2;
        tmp_12_6_reg_1669 <= tmp_12_6_fu_1175_p2;
        tmp_12_7_4_reg_1684 <= tmp_12_7_4_fu_1199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        dst_addr_4_reg_1689 <= sum8_cast_fu_817_p1;
        src_offset_read_reg_1284 <= src_offset;
        tmp45_reg_1700 <= tmp45_fu_846_p2;
        tmp_12_7_2_reg_1710 <= tmp_12_7_2_fu_1230_p2;
        tmp_12_7_reg_1705 <= tmp_12_7_fu_1225_p2;
        tmp_5_5_reg_1695 <= {{tmp_3_5_fu_831_p2[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        dst_addr_5_reg_1720 <= sum1_cast_fu_871_p1;
        dst_addr_6_reg_1731 <= sum3_cast_fu_912_p1;
        dst_addr_7_reg_1752 <= sum5_cast_fu_941_p1;
        tmp52_reg_1747 <= tmp52_fu_925_p2;
        tmp_5_6_reg_1726 <= {{tmp_3_6_fu_885_p2[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce))) begin
        dst_addr_reg_1516 <= sum_cast_fu_474_p1;
        dst_offset_cast_reg_1469[30 : 0] <= dst_offset_cast_fu_419_p1[30 : 0];
        off_read_reg_1461 <= ap_port_reg_off;
        tmp8_reg_1511[28 : 13] <= tmp8_fu_458_p2[28 : 13];
        tmp_11_0_3_cast_reg_1480 <= tmp_11_0_3_cast_fu_423_p1;
        tmp_11_0_5_cast_reg_1488 <= tmp_11_0_5_cast_fu_429_p1;
        tmp_12_4_s_reg_1557 <= tmp_12_4_s_fu_489_p2;
        tmp_2_reg_1552 <= tmp_2_fu_484_p2;
        tmp_reg_1506[28 : 13] <= tmp_fu_452_p2[28 : 13];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        src_load_1_reg_1333 <= src_q0;
        src_load_2_reg_1339 <= src_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce))) begin
        src_load_3_reg_1407 <= src_q0;
        src_load_5_reg_1413 <= src_q1;
        tmp14_reg_1446 <= grp_fu_1019_p3;
        tmp1_reg_1436 <= grp_fu_1006_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        src_load_4_reg_1320 <= src_q1;
        src_load_reg_1304 <= src_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce))) begin
        src_load_6_reg_1495 <= src_q0;
        src_load_7_reg_1500 <= src_q1;
        tmp10_reg_1527 <= grp_fu_1050_p3;
        tmp15_reg_1532 <= grp_fu_1057_p3;
        tmp17_reg_1537 <= grp_fu_1064_p3;
        tmp21_reg_1542 <= grp_fu_1071_p3;
        tmp24_reg_1547 <= grp_fu_1077_p3;
        tmp2_reg_1522 <= grp_fu_1043_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce))) begin
        tmp12_reg_1580 <= grp_fu_1084_p3;
        tmp19_reg_1597 <= grp_fu_1100_p3;
        tmp26_reg_1602 <= grp_fu_1116_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce))) begin
        tmp37_reg_1648 <= grp_fu_1149_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp44_reg_1679 <= grp_fu_1185_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce))) begin
        tmp46_reg_1737 <= grp_fu_1257_p3;
        tmp47_reg_1742 <= grp_fu_1263_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce))) begin
        tmp50_reg_1715 <= grp_fu_1235_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce))) begin
        tmp_11_0_1_cast_reg_1392 <= tmp_11_0_1_cast_fu_393_p1;
        tmp_11_0_2_cast_reg_1400 <= tmp_11_0_2_cast_fu_396_p1;
        tmp_12_1_2_reg_1431 <= tmp_12_1_2_fu_1013_p2;
        tmp_12_2_2_reg_1441 <= tmp_12_2_2_fu_1026_p2;
        tmp_12_3_2_reg_1451 <= tmp_12_3_2_fu_1032_p2;
        tmp_12_5_4_reg_1456 <= tmp_12_5_4_fu_1038_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce))) begin
        tmp_11_0_4_cast_reg_1350 <= tmp_11_0_4_cast_fu_380_p1;
        tmp_11_cast_reg_1326 <= tmp_11_cast_fu_367_p1;
        tmp_12_1_4_reg_1367 <= tmp_12_1_4_fu_976_p2;
        tmp_12_1_reg_1362 <= tmp_12_1_fu_970_p2;
        tmp_12_2_4_reg_1377 <= tmp_12_2_4_fu_988_p2;
        tmp_12_2_reg_1372 <= tmp_12_2_fu_982_p2;
        tmp_12_3_4_reg_1387 <= tmp_12_3_4_fu_1000_p2;
        tmp_12_3_reg_1382 <= tmp_12_3_fu_994_p2;
        tmp_5_7_reg_1758 <= {{tmp_3_7_fu_955_p2[28:13]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_dst_AWREADY = m_axi_dst_AWREADY;
    end else begin
        ap_sig_ioackin_m_axi_dst_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_dst_WREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_dst_WREADY = m_axi_dst_WREADY;
    end else begin
        ap_sig_ioackin_m_axi_dst_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        dst_blk_n_AW = m_axi_dst_AWREADY;
    end else begin
        dst_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)))) begin
        dst_blk_n_B = m_axi_dst_BVALID;
    end else begin
        dst_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)))) begin
        dst_blk_n_W = m_axi_dst_WREADY;
    end else begin
        dst_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (1'b1 == ap_ce))) begin
        if ((1'b1 == ap_condition_683)) begin
            m_axi_dst_AWADDR = dst_addr_7_reg_1752;
        end else if ((1'b1 == ap_condition_665)) begin
            m_axi_dst_AWADDR = dst_addr_6_reg_1731;
        end else if ((1'b1 == ap_condition_645)) begin
            m_axi_dst_AWADDR = dst_addr_5_reg_1720;
        end else if ((1'b1 == ap_condition_627)) begin
            m_axi_dst_AWADDR = dst_addr_4_reg_1689;
        end else if ((1'b1 == ap_condition_609)) begin
            m_axi_dst_AWADDR = dst_addr_3_reg_1658;
        end else if ((1'b1 == ap_condition_590)) begin
            m_axi_dst_AWADDR = dst_addr_2_reg_1627;
        end else if ((1'b1 == ap_condition_572)) begin
            m_axi_dst_AWADDR = dst_addr_1_reg_1591;
        end else if ((1'b1 == ap_condition_559)) begin
            m_axi_dst_AWADDR = dst_addr_reg_1516;
        end else begin
            m_axi_dst_AWADDR = 'bx;
        end
    end else begin
        m_axi_dst_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)))) begin
        m_axi_dst_AWVALID = 1'b1;
    end else begin
        m_axi_dst_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)))) begin
        m_axi_dst_BREADY = 1'b1;
    end else begin
        m_axi_dst_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (1'b1 == ap_ce))) begin
        if ((1'b1 == ap_condition_698)) begin
            m_axi_dst_WDATA = tmp_5_7_reg_1758;
        end else if ((1'b1 == ap_condition_683)) begin
            m_axi_dst_WDATA = tmp_5_6_reg_1726;
        end else if ((1'b1 == ap_condition_665)) begin
            m_axi_dst_WDATA = tmp_5_5_reg_1695;
        end else if ((1'b1 == ap_condition_645)) begin
            m_axi_dst_WDATA = tmp_5_4_reg_1607;
        end else if ((1'b1 == ap_condition_627)) begin
            m_axi_dst_WDATA = tmp_5_3_reg_1633;
        end else if ((1'b1 == ap_condition_609)) begin
            m_axi_dst_WDATA = tmp_5_2_reg_1617;
        end else if ((1'b1 == ap_condition_590)) begin
            m_axi_dst_WDATA = tmp_5_1_reg_1612;
        end else if ((1'b1 == ap_condition_572)) begin
            m_axi_dst_WDATA = tmp_5_reg_1575;
        end else begin
            m_axi_dst_WDATA = 'bx;
        end
    end else begin
        m_axi_dst_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_reg_ioackin_m_axi_dst_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b1 == ap_ce)))) begin
        m_axi_dst_WVALID = 1'b1;
    end else begin
        m_axi_dst_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            src_address0 = sum_0_6_cast_fu_404_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            src_address0 = sum_0_3_cast_fu_375_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            src_address0 = sum_0_1_cast_fu_352_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_address0 = src_offset_cast1_fu_331_p1;
        end else begin
            src_address0 = 'bx;
        end
    end else begin
        src_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            src_address1 = sum_0_7_cast_fu_414_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            src_address1 = sum_0_5_cast_fu_388_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            src_address1 = sum_0_2_cast_fu_362_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_address1 = sum_0_4_cast_fu_342_p1;
        end else begin
            src_address1 = 'bx;
        end
    end else begin
        src_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        src_ce0 = 1'b1;
    end else begin
        src_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b1 == ap_ce)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_ce)))) begin
        src_ce1 = 1'b1;
    end else begin
        src_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (1'b1 == ap_block_state12_io)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (1'b1 == ap_block_state12_io))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (1'b1 == ap_block_state13_io)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (1'b1 == ap_block_state13_io))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b0 == ap_ce) | ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_dst_BVALID == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b0 == ap_ce) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_dst_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage3_iter1 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state13_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage4_iter1 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state15_pp0_stage6_iter1 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state16_pp0_stage7_iter1 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter2 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter2 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter2 = (m_axi_dst_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((ap_sig_ioackin_m_axi_dst_AWREADY == 1'b0) | (ap_sig_ioackin_m_axi_dst_WREADY == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_559 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_572 = ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_590 = ((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_609 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_627 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_645 = ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_665 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_683 = ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_698 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dst_offset_cast_fu_419_p1 = ap_port_reg_dst_offset;

assign grp_fu_1006_p0 = tmp_11_0_1_cast_fu_393_p1;

assign grp_fu_1006_p1 = 29'd9633;

assign grp_fu_1019_p0 = tmp_11_0_1_cast_fu_393_p1;

assign grp_fu_1019_p1 = 29'd4433;

assign grp_fu_1043_p0 = tmp_11_0_3_cast_fu_423_p1;

assign grp_fu_1043_p1 = 29'd2260;

assign grp_fu_1050_p0 = tmp_11_0_5_cast_fu_429_p1;

assign grp_fu_1050_p1 = 29'd536864476;

assign grp_fu_1057_p0 = tmp_11_0_3_cast_fu_423_p1;

assign grp_fu_1057_p1 = 29'd536860209;

assign grp_fu_1064_p0 = tmp_11_0_5_cast_fu_429_p1;

assign grp_fu_1064_p1 = 29'd536866479;

assign grp_fu_1071_p0 = tmp_11_0_1_cast_reg_1392;

assign grp_fu_1071_p1 = 29'd536868652;

assign grp_fu_1077_p0 = tmp_11_0_5_cast_fu_429_p1;

assign grp_fu_1077_p1 = 29'd11363;

assign grp_fu_1084_p0 = tmp_11_0_6_cast_fu_537_p1;

assign grp_fu_1084_p1 = 29'd536861280;

assign grp_fu_1091_p0 = tmp_11_0_7_cast_fu_540_p1;

assign grp_fu_1091_p1 = 29'd536859550;

assign grp_fu_1091_p2 = 29'd4096;

assign grp_fu_1100_p0 = tmp_11_0_6_cast_fu_537_p1;

assign grp_fu_1100_p1 = 29'd4433;

assign grp_fu_1107_p0 = tmp_11_0_7_cast_fu_540_p1;

assign grp_fu_1107_p1 = 29'd10703;

assign grp_fu_1107_p2 = 29'd4096;

assign grp_fu_1116_p0 = tmp_11_0_6_cast_fu_537_p1;

assign grp_fu_1116_p1 = 29'd2260;

assign grp_fu_1123_p0 = tmp_11_0_7_cast_fu_540_p1;

assign grp_fu_1123_p1 = 29'd536861280;

assign grp_fu_1123_p2 = 29'd4096;

assign grp_fu_1132_p0 = tmp_11_0_3_cast_reg_1480;

assign grp_fu_1132_p1 = 29'd536864476;

assign grp_fu_1149_p0 = tmp_11_0_6_cast_reg_1562;

assign grp_fu_1149_p1 = 29'd11363;

assign grp_fu_1155_p0 = tmp_11_0_7_cast_reg_1569;

assign grp_fu_1155_p1 = 29'd536864476;

assign grp_fu_1155_p2 = 29'd4096;

assign grp_fu_1168_p0 = tmp_11_0_5_cast_reg_1488;

assign grp_fu_1168_p1 = 29'd536868652;

assign grp_fu_1185_p0 = tmp_11_0_6_cast_reg_1562;

assign grp_fu_1185_p1 = 29'd536860209;

assign grp_fu_1191_p0 = tmp_11_0_7_cast_reg_1569;

assign grp_fu_1191_p1 = 29'd4433;

assign grp_fu_1191_p2 = 29'd4096;

assign grp_fu_1204_p0 = tmp_11_0_1_cast_reg_1392;

assign grp_fu_1204_p1 = 29'd536859550;

assign grp_fu_1211_p0 = tmp_11_0_3_cast_reg_1480;

assign grp_fu_1211_p1 = 29'd9633;

assign grp_fu_1218_p0 = tmp_11_0_5_cast_reg_1488;

assign grp_fu_1218_p1 = 29'd10703;

assign grp_fu_1235_p1 = 28'd268433196;

assign grp_fu_1235_p2 = 28'd4096;

assign grp_fu_1243_p0 = tmp_11_0_1_cast_reg_1392;

assign grp_fu_1243_p1 = 29'd536860209;

assign grp_fu_1250_p0 = tmp_11_0_3_cast_reg_1480;

assign grp_fu_1250_p1 = 29'd536866479;

assign grp_fu_1257_p0 = tmp_11_0_1_cast_reg_1392;

assign grp_fu_1257_p1 = 29'd536864476;

assign grp_fu_1263_p0 = tmp_11_0_3_cast_reg_1480;

assign grp_fu_1263_p1 = 29'd536859550;

assign grp_fu_1269_p0 = tmp_11_0_5_cast_reg_1488;

assign grp_fu_1269_p1 = 29'd536861280;

assign grp_fu_1276_p0 = tmp_11_0_6_cast_reg_1562;

assign grp_fu_1276_p1 = 29'd6436;

assign m_axi_dst_ARADDR = 32'd0;

assign m_axi_dst_ARBURST = 2'd0;

assign m_axi_dst_ARCACHE = 4'd0;

assign m_axi_dst_ARID = 1'd0;

assign m_axi_dst_ARLEN = 32'd0;

assign m_axi_dst_ARLOCK = 2'd0;

assign m_axi_dst_ARPROT = 3'd0;

assign m_axi_dst_ARQOS = 4'd0;

assign m_axi_dst_ARREGION = 4'd0;

assign m_axi_dst_ARSIZE = 3'd0;

assign m_axi_dst_ARUSER = 1'd0;

assign m_axi_dst_ARVALID = 1'b0;

assign m_axi_dst_AWBURST = 2'd0;

assign m_axi_dst_AWCACHE = 4'd0;

assign m_axi_dst_AWID = 1'd0;

assign m_axi_dst_AWLEN = 32'd1;

assign m_axi_dst_AWLOCK = 2'd0;

assign m_axi_dst_AWPROT = 3'd0;

assign m_axi_dst_AWQOS = 4'd0;

assign m_axi_dst_AWREGION = 4'd0;

assign m_axi_dst_AWSIZE = 3'd0;

assign m_axi_dst_AWUSER = 1'd0;

assign m_axi_dst_RREADY = 1'b0;

assign m_axi_dst_WID = 1'd0;

assign m_axi_dst_WLAST = 1'b0;

assign m_axi_dst_WSTRB = 2'd3;

assign m_axi_dst_WUSER = 1'd0;

assign off_cast_fu_797_p1 = off_read_reg_1461;

assign p_shl_fu_639_p3 = {{tmp_2_reg_1552}, {13'd0}};

assign src_offset_cast1_fu_331_p1 = src_offset;

assign sum1_cast_fu_871_p1 = sum1_fu_866_p2;

assign sum1_fu_866_p2 = (tmp_9_5_cast_fu_862_p1 + dst_offset_cast_reg_1469);

assign sum2_cast_fu_602_p1 = sum2_fu_597_p2;

assign sum2_fu_597_p2 = (tmp_9_1_cast_fu_593_p1 + dst_offset_cast_reg_1469);

assign sum3_cast_fu_912_p1 = sum3_fu_907_p2;

assign sum3_fu_907_p2 = (tmp_9_6_cast_fu_903_p1 + dst_offset_cast_reg_1469);

assign sum4_cast_fu_737_p1 = sum4_fu_732_p2;

assign sum4_fu_732_p2 = (tmp_9_2_cast_fu_728_p1 + dst_offset_cast_reg_1469);

assign sum5_cast_fu_941_p1 = sum5_fu_936_p2;

assign sum5_fu_936_p2 = (tmp_9_7_cast_fu_932_p1 + dst_offset_cast_reg_1469);

assign sum6_cast_fu_783_p1 = sum6_fu_778_p2;

assign sum6_fu_778_p2 = (tmp_9_3_cast_fu_774_p1 + dst_offset_cast_reg_1469);

assign sum8_cast_fu_817_p1 = sum8_fu_812_p2;

assign sum8_fu_812_p2 = (tmp_9_4_cast_fu_808_p1 + dst_offset_cast_reg_1469);

assign sum_0_1_cast_fu_352_p1 = sum_0_1_fu_347_p2;

assign sum_0_1_fu_347_p2 = (src_offset_read_reg_1284 + 6'd1);

assign sum_0_2_cast_fu_362_p1 = sum_0_2_fu_357_p2;

assign sum_0_2_fu_357_p2 = (src_offset_read_reg_1284 + 6'd2);

assign sum_0_3_cast_fu_375_p1 = sum_0_3_fu_370_p2;

assign sum_0_3_fu_370_p2 = (src_offset_read_reg_1284 + 6'd3);

assign sum_0_4_cast_fu_342_p1 = sum_0_4_fu_336_p2;

assign sum_0_4_fu_336_p2 = (src_offset + 6'd4);

assign sum_0_5_cast_fu_388_p1 = sum_0_5_fu_383_p2;

assign sum_0_5_fu_383_p2 = (src_offset_read_reg_1284 + 6'd5);

assign sum_0_6_cast_fu_404_p1 = sum_0_6_fu_399_p2;

assign sum_0_6_fu_399_p2 = (src_offset_read_reg_1284 + 6'd6);

assign sum_0_7_cast_fu_414_p1 = sum_0_7_fu_409_p2;

assign sum_0_7_fu_409_p2 = (src_offset_read_reg_1284 + 6'd7);

assign sum_cast_fu_474_p1 = sum_fu_468_p2;

assign sum_fu_468_p2 = (tmp_9_cast_fu_464_p1 + dst_offset_cast_fu_419_p1);

assign tmp13_fu_677_p2 = ($signed(tmp12_reg_1580) + $signed(tmp10_reg_1527));

assign tmp16_fu_697_p2 = ($signed(tmp15_reg_1532) + $signed(tmp14_reg_1446));

assign tmp20_fu_701_p2 = ($signed(tmp19_reg_1597) + $signed(tmp17_reg_1537));

assign tmp23_fu_747_p2 = ($signed(grp_fu_1132_p3) + $signed(tmp21_reg_1542));

assign tmp27_fu_751_p2 = ($signed(tmp26_reg_1602) + $signed(tmp24_reg_1547));

assign tmp28_fu_624_p2 = (tmp_12_0_3_fu_516_p3 + tmp_12_0_4_fu_523_p3);

assign tmp29_fu_630_p2 = (tmp28_fu_624_p2 + tmp_13_4_2_fu_618_p2);

assign tmp30_fu_646_p2 = ($signed(tmp_12_4_558_cast_fu_636_p1) - $signed(p_shl_fu_639_p3));

assign tmp31_fu_652_p2 = (tmp_reg_1506 + tmp30_fu_646_p2);

assign tmp34_fu_827_p2 = ($signed(grp_fu_1211_p3) + $signed(grp_fu_1204_p3));

assign tmp38_fu_793_p2 = ($signed(tmp37_reg_1648) + $signed(grp_fu_1168_p3));

assign tmp3_fu_555_p2 = (tmp5_fu_549_p2 + tmp4_fu_543_p2);

assign tmp41_fu_881_p2 = ($signed(grp_fu_1250_p3) + $signed(grp_fu_1243_p3));

assign tmp45_fu_846_p2 = ($signed(tmp44_reg_1679) + $signed(grp_fu_1218_p3));

assign tmp48_fu_951_p2 = ($signed(tmp47_reg_1742) + $signed(tmp46_reg_1737));

assign tmp4_fu_543_p2 = (tmp_s_fu_495_p3 + tmp_12_0_1_fu_502_p3);

assign tmp52_fu_925_p2 = ($signed(grp_fu_1276_p3) + $signed(grp_fu_1269_p3));

assign tmp5_fu_549_p2 = (tmp_12_0_2_fu_509_p3 + tmp_12_0_3_fu_516_p3);

assign tmp6_fu_567_p2 = (tmp8_reg_1511 + tmp7_fu_561_p2);

assign tmp7_fu_561_p2 = (tmp_12_0_4_fu_523_p3 + tmp_12_0_5_fu_530_p3);

assign tmp8_fu_458_p2 = (tmp_fu_452_p2 + tmp_12_0_6_fu_436_p3);

assign tmp9_fu_673_p2 = ($signed(tmp2_reg_1522) + $signed(tmp1_reg_1436));

assign tmp_11_0_1_cast_fu_393_p1 = src_load_1_reg_1333;

assign tmp_11_0_2_cast_fu_396_p1 = src_load_2_reg_1339;

assign tmp_11_0_3_cast_fu_423_p1 = src_load_3_reg_1407;

assign tmp_11_0_4_cast_fu_380_p1 = src_load_4_reg_1320;

assign tmp_11_0_5_cast1_fu_426_p1 = src_load_5_reg_1413;

assign tmp_11_0_5_cast_fu_429_p1 = src_load_5_reg_1413;

assign tmp_11_0_6_cast1_fu_432_p0 = src_q0;

assign tmp_11_0_6_cast1_fu_432_p1 = tmp_11_0_6_cast1_fu_432_p0;

assign tmp_11_0_6_cast_fu_537_p1 = src_load_6_reg_1495;

assign tmp_11_0_7_cast_fu_540_p1 = src_load_7_reg_1500;

assign tmp_11_cast_fu_367_p1 = src_load_reg_1304;

assign tmp_12_0_1_fu_502_p3 = {{src_load_1_reg_1333}, {13'd0}};

assign tmp_12_0_2_fu_509_p3 = {{src_load_2_reg_1339}, {13'd0}};

assign tmp_12_0_3_fu_516_p3 = {{src_load_3_reg_1407}, {13'd0}};

assign tmp_12_0_4_fu_523_p3 = {{src_load_4_reg_1320}, {13'd0}};

assign tmp_12_0_5_fu_530_p3 = {{src_load_5_reg_1413}, {13'd0}};

assign tmp_12_0_6_fu_436_p1 = src_q0;

assign tmp_12_0_6_fu_436_p3 = {{tmp_12_0_6_fu_436_p1}, {13'd0}};

assign tmp_12_0_7_fu_444_p1 = src_q1;

assign tmp_12_0_7_fu_444_p3 = {{tmp_12_0_7_fu_444_p1}, {13'd0}};

assign tmp_12_1_2_fu_1013_p0 = tmp_11_0_2_cast_fu_396_p1;

assign tmp_12_1_2_fu_1013_p1 = 29'd6436;

assign tmp_12_1_4_fu_976_p0 = tmp_11_0_4_cast_fu_380_p1;

assign tmp_12_1_4_fu_976_p1 = 29'd536868652;

assign tmp_12_1_fu_970_p0 = tmp_11_cast_fu_367_p1;

assign tmp_12_1_fu_970_p1 = 29'd11363;

assign tmp_12_2_2_fu_1026_p0 = tmp_11_0_2_cast_fu_396_p1;

assign tmp_12_2_2_fu_1026_p1 = 29'd536866479;

assign tmp_12_2_4_fu_988_p0 = tmp_11_0_4_cast_fu_380_p1;

assign tmp_12_2_4_fu_988_p1 = 29'd536860209;

assign tmp_12_2_fu_982_p0 = tmp_11_cast_fu_367_p1;

assign tmp_12_2_fu_982_p1 = 29'd10703;

assign tmp_12_3_2_fu_1032_p0 = tmp_11_0_2_cast_fu_396_p1;

assign tmp_12_3_2_fu_1032_p1 = 29'd536859550;

assign tmp_12_3_4_fu_1000_p0 = tmp_11_0_4_cast_fu_380_p1;

assign tmp_12_3_4_fu_1000_p1 = 29'd6436;

assign tmp_12_3_fu_994_p0 = tmp_11_cast_fu_367_p1;

assign tmp_12_3_fu_994_p1 = 29'd9633;

assign tmp_12_4_558_cast_fu_636_p1 = $signed(tmp_12_4_s_reg_1557);

assign tmp_12_4_s_fu_489_p2 = ($signed(tmp_11_0_5_cast1_fu_426_p1) + $signed(tmp_11_0_6_cast1_fu_432_p1));

assign tmp_12_5_2_fu_1144_p0 = tmp_11_0_2_cast_reg_1400;

assign tmp_12_5_2_fu_1144_p1 = 29'd2260;

assign tmp_12_5_4_fu_1038_p0 = tmp_11_0_4_cast_reg_1350;

assign tmp_12_5_4_fu_1038_p1 = 29'd536861280;

assign tmp_12_5_fu_1139_p0 = tmp_11_cast_reg_1326;

assign tmp_12_5_fu_1139_p1 = 29'd6436;

assign tmp_12_6_2_fu_1180_p0 = tmp_11_0_2_cast_reg_1400;

assign tmp_12_6_2_fu_1180_p1 = 29'd10703;

assign tmp_12_6_4_fu_1163_p0 = tmp_11_0_4_cast_reg_1350;

assign tmp_12_6_4_fu_1163_p1 = 29'd536866479;

assign tmp_12_6_fu_1175_p0 = tmp_11_cast_reg_1326;

assign tmp_12_6_fu_1175_p1 = 29'd4433;

assign tmp_12_7_2_fu_1230_p0 = tmp_11_0_2_cast_reg_1400;

assign tmp_12_7_2_fu_1230_p1 = 29'd9633;

assign tmp_12_7_4_fu_1199_p0 = tmp_11_0_4_cast_reg_1350;

assign tmp_12_7_4_fu_1199_p1 = 29'd11363;

assign tmp_12_7_fu_1225_p0 = tmp_11_cast_reg_1326;

assign tmp_12_7_fu_1225_p1 = 29'd2260;

assign tmp_13_4_1_fu_612_p2 = (tmp_s_fu_495_p3 - tmp_12_0_1_fu_502_p3);

assign tmp_13_4_2_fu_618_p2 = (tmp_13_4_1_fu_612_p2 - tmp_12_0_2_fu_509_p3);

assign tmp_2_fu_484_p0 = src_q0;

assign tmp_2_fu_484_p2 = ($signed(tmp_2_fu_484_p0) + $signed(src_load_5_reg_1413));

assign tmp_3_1_fu_681_p2 = (tmp13_fu_677_p2 + tmp9_fu_673_p2);

assign tmp_3_2_fu_705_p2 = (tmp20_fu_701_p2 + tmp16_fu_697_p2);

assign tmp_3_3_fu_755_p2 = (tmp27_fu_751_p2 + tmp23_fu_747_p2);

assign tmp_3_4_fu_657_p2 = (tmp31_fu_652_p2 + tmp29_fu_630_p2);

assign tmp_3_5_fu_831_p2 = (tmp38_reg_1664 + tmp34_fu_827_p2);

assign tmp_3_6_fu_885_p2 = (tmp45_reg_1700 + tmp41_fu_881_p2);

assign tmp_3_7_fu_955_p2 = (tmp52_reg_1747 + tmp48_fu_951_p2);

assign tmp_3_fu_572_p2 = (tmp6_fu_567_p2 + tmp3_fu_555_p2);

assign tmp_8_1_fu_588_p2 = (off_read_reg_1461 ^ 4'd8);

assign tmp_8_2_fu_721_p3 = {{1'd1}, {off_read_reg_1461}};

assign tmp_8_3_cast_fu_771_p1 = tmp_8_1_reg_1585;

assign tmp_8_5_fu_856_p2 = ($signed(tmp_cast1_fu_853_p1) + $signed(6'd40));

assign tmp_8_6_cast_fu_900_p1 = tmp_8_2_reg_1622;

assign tmp_8_7_cast_fu_929_p1 = tmp_8_1_reg_1585;

assign tmp_8_s_fu_800_p3 = {{1'd1}, {off_cast_fu_797_p1}};

assign tmp_9_1_cast_fu_593_p1 = $unsigned(tmp_8_1_fu_588_p2);

assign tmp_9_2_cast_fu_728_p1 = $unsigned(tmp_8_2_fu_721_p3);

assign tmp_9_3_cast_fu_774_p1 = $unsigned(tmp_8_3_cast_fu_771_p1);

assign tmp_9_4_cast_fu_808_p1 = tmp_8_s_fu_800_p3;

assign tmp_9_5_cast_fu_862_p1 = tmp_8_5_fu_856_p2;

assign tmp_9_6_cast_fu_903_p1 = $unsigned(tmp_8_6_cast_fu_900_p1);

assign tmp_9_7_cast_fu_932_p1 = $unsigned(tmp_8_7_cast_fu_929_p1);

assign tmp_9_cast_fu_464_p1 = ap_port_reg_off;

assign tmp_cast1_fu_853_p1 = off_read_reg_1461;

assign tmp_fu_452_p2 = (tmp_12_0_7_fu_444_p3 | 29'd4096);

assign tmp_s_fu_495_p3 = {{src_load_reg_1304}, {13'd0}};

always @ (posedge ap_clk) begin
    dst_offset_cast_reg_1469[31] <= 1'b0;
    tmp_reg_1506[12:0] <= 13'b1000000000000;
    tmp8_reg_1511[12:0] <= 13'b1000000000000;
    tmp_8_2_reg_1622[4] <= 1'b1;
end

endmodule //new_dct_1d_2
